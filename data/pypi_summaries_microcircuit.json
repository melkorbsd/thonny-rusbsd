[
    {
        "name": "Adafruit-Micropython-Blinka",
        "summary": "A selection of packages for mirroring the CircuitPython API on hosts running micropython."
    },
    {
        "name": "DIYables-MicroPython-Button",
        "summary": "MicroPython Library for Button, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-DS18X20",
        "summary": "MicroPython Library for DS18X20, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-Joystick",
        "summary": "MicroPython Library for Joystick, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-Keypad",
        "summary": "Servo Motor Library for Keypad, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-LCD-I2C",
        "summary": "MicroPython Library for LCD I2C display, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-LED",
        "summary": "MicroPython Library for blinking and fading LED, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-LED-Matrix",
        "summary": "MicroPython Library for LED Matrix display, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-OLED",
        "summary": "MicroPython Library for OLED display, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-Servo",
        "summary": "MicroPython Library for Servo Motor, created by DIYables"
    },
    {
        "name": "DIYables-MicroPython-Ultrasonic-Sensor",
        "summary": "MicroPython Library for Ultrasonic Sensor, created by DIYables"
    },
    {
        "name": "MicroPython-Dashboard-carlsonrocco",
        "summary": "A modular dashboard made using WS2812b individually addressable LEDs and an ESP8266 microcontroller running MicroPython"
    },
    {
        "name": "adafruit-circuitpython-24lc32",
        "summary": "CircuitPython driver for Adafruit 24LC32 I2C EEPROM Breakout"
    },
    {
        "name": "adafruit-circuitpython-74hc595",
        "summary": "CircuitPython driver for 74HC595 shift register."
    },
    {
        "name": "adafruit-circuitpython-HTU21D",
        "summary": "CircuitPython library for HTU21D-F Temperature and     Humidity Sensor."
    },
    {
        "name": "adafruit-circuitpython-PYOA",
        "summary": "Python your own Adventure - card & button game"
    },
    {
        "name": "adafruit-circuitpython-acep7in",
        "summary": "Driver for 7.3\" 7-color (aka ACeP) epaper display"
    },
    {
        "name": "adafruit-circuitpython-ad569x",
        "summary": "CircuitPython driver for the AD569x DAC"
    },
    {
        "name": "adafruit-circuitpython-adafruitio",
        "summary": "Adafruit IO for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-adg72x",
        "summary": "CircuitPython driver for the ADG728 and ADG729 analog matrix switches."
    },
    {
        "name": "adafruit-circuitpython-ads1x15",
        "summary": "CircuitPython library for controlling an ADS1x15 ADC."
    },
    {
        "name": "adafruit-circuitpython-ads7830",
        "summary": "CircuitPython driver for the ADS7830 analog to digital converter"
    },
    {
        "name": "adafruit-circuitpython-adt7410",
        "summary": "CircuitPython driver for reading temperature from the Analog Devices ADT7410 precision temperature sensor."
    },
    {
        "name": "adafruit-circuitpython-adxl34x",
        "summary": "A CircuitPython driver for the ADXL34x family of accelerometers."
    },
    {
        "name": "adafruit-circuitpython-adxl37x",
        "summary": "A CircuitPython driver for the ADXL37x family of accelerometers"
    },
    {
        "name": "adafruit-circuitpython-ags02ma",
        "summary": "CircuitPython / Python library for AGS02MA gas sensor"
    },
    {
        "name": "adafruit-circuitpython-ahtx0",
        "summary": "CircuitPython driver for the Adafruit AHT10 Humidity and Temperature Sensor"
    },
    {
        "name": "adafruit-circuitpython-airlift",
        "summary": "Manage AirLift coprocessors for use with Wifi and Bluetooth"
    },
    {
        "name": "adafruit-circuitpython-am2320",
        "summary": "CircuitPython driver for the AM2320 temperature and humidity sensor."
    },
    {
        "name": "adafruit-circuitpython-amg88xx",
        "summary": "CircuitPython library for AMG88xx thermal camera."
    },
    {
        "name": "adafruit-circuitpython-anchored-tilegrid",
        "summary": "TileGrid subclass that can be placed relative to an arbitrary anchor point."
    },
    {
        "name": "adafruit-circuitpython-apds9960",
        "summary": "CircuitPython driver for APSD9960 Gesture breakout board"
    },
    {
        "name": "adafruit-circuitpython-as726x",
        "summary": "CircuitPython driver for AS726x spectral sensor."
    },
    {
        "name": "adafruit-circuitpython-as7341",
        "summary": "CircuitPython library for use with the Adafruit AS7341 breakout"
    },
    {
        "name": "adafruit-circuitpython-asyncio",
        "summary": "Cooperative multitasking and asynchronous I/O"
    },
    {
        "name": "adafruit-circuitpython-atecc",
        "summary": "Driver for Microchip's ATECCx08 cryptographic co-processors with secure hardware-based key storage"
    },
    {
        "name": "adafruit-circuitpython-avrprog",
        "summary": "CircuitPython helper library for programming AVR chips."
    },
    {
        "name": "adafruit-circuitpython-aw9523",
        "summary": "Python library for AW9523 GPIO expander and LED driver"
    },
    {
        "name": "adafruit-circuitpython-aws-iot",
        "summary": "Amazon AWS IoT MQTT Client for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-azureiot",
        "summary": "Access to Microsoft Azure IoT from CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-bd3491fs",
        "summary": "CircuitPython library for the Rohm BD3491FS Audio Processor"
    },
    {
        "name": "adafruit-circuitpython-bh1750",
        "summary": "CircuitPython library for use with the Adafruit BH1750 breakout"
    },
    {
        "name": "adafruit-circuitpython-binascii",
        "summary": "Helpers for conversions between binary and ASCII"
    },
    {
        "name": "adafruit-circuitpython-bitbangio",
        "summary": "A library for adding bitbang I2C and SPI to CircuitPython without the built-in bitbangio module"
    },
    {
        "name": "adafruit-circuitpython-bitmap-font",
        "summary": "Loads bitmap fonts into CircuitPython displayio."
    },
    {
        "name": "adafruit-circuitpython-bitmapsaver",
        "summary": "Save a displayio.Bitmap (and associated displayio.Palette) into a BMP file."
    },
    {
        "name": "adafruit-circuitpython-ble",
        "summary": "Bluetooth Low Energy (BLE) library for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-ble-adafruit",
        "summary": "Access to sensors and hardware on or connected to BLE-capable boards"
    },
    {
        "name": "adafruit-circuitpython-ble-apple-media",
        "summary": "Support for the Apple Media Service which provides media playback info and control."
    },
    {
        "name": "adafruit-circuitpython-ble-apple-notification-center",
        "summary": "BLE library for the Apple Notification Center"
    },
    {
        "name": "adafruit-circuitpython-ble-beacon",
        "summary": "BLE Location Beacon for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-ble-berrymed-pulse-oximeter",
        "summary": "BLE Support for BerryMed Pulse Oximeter Service"
    },
    {
        "name": "adafruit-circuitpython-ble-broadcastnet",
        "summary": "Basic IOT over BLE advertisements."
    },
    {
        "name": "adafruit-circuitpython-ble-creation",
        "summary": "Friendlier device discovery using Creation IDs"
    },
    {
        "name": "adafruit-circuitpython-ble-cycling-speed-and-cadence",
        "summary": "BLE Cycling Speed and Cadence Service"
    },
    {
        "name": "adafruit-circuitpython-ble-eddystone",
        "summary": "CircuitPython BLE library for Google's open 'physical web' Eddystone."
    },
    {
        "name": "adafruit-circuitpython-ble-file-transfer",
        "summary": "Simple BLE Service for reading and writing files over BLE"
    },
    {
        "name": "adafruit-circuitpython-ble-heart-rate",
        "summary": "BLE Heart Rate Service"
    },
    {
        "name": "adafruit-circuitpython-ble-ibbq",
        "summary": "BLE support for iBBQ thermometers"
    },
    {
        "name": "adafruit-circuitpython-ble-lywsd03mmc",
        "summary": "BLE Support for Xiaomi LYWSD03MMC Thermometer/Hygrometer"
    },
    {
        "name": "adafruit-circuitpython-ble-magic-light",
        "summary": "BLE service for Magic Light BLE RGB bulbs"
    },
    {
        "name": "adafruit-circuitpython-ble-midi",
        "summary": "BLE MIDI service for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-ble-pulse-oximeter",
        "summary": "BLE Support for BerryMed Pulse Oximeter Service"
    },
    {
        "name": "adafruit-circuitpython-ble-radio",
        "summary": "Simple byte and string based inter-device communication via BLE."
    },
    {
        "name": "adafruit-circuitpython-bluefruitconnect",
        "summary": "CircuitPython library for use with the Adafruit Bluefruit Connect apps."
    },
    {
        "name": "adafruit-circuitpython-bluefruitspi",
        "summary": "CircuitPython helper class to work with the Adafruit Bluefruit LE SPI Friend."
    },
    {
        "name": "adafruit-circuitpython-bme280",
        "summary": "CircuitPython library for the Bosch BME280 temperature/humidity/pressure sensor."
    },
    {
        "name": "adafruit-circuitpython-bme680",
        "summary": "CircuitPython driver for BME680 sensor over I2C"
    },
    {
        "name": "adafruit-circuitpython-bmp280",
        "summary": "CircuitPython driver for the BMP280."
    },
    {
        "name": "adafruit-circuitpython-bmp3xx",
        "summary": "CircuitPython library for BMP3XX Temperature and Barometric Pressure sensor."
    },
    {
        "name": "adafruit-circuitpython-bno055",
        "summary": "CircuitPython library for BNO055 9-DOF absolute orientation sensor."
    },
    {
        "name": "adafruit-circuitpython-bno08x",
        "summary": "Helper library for the Hillcrest Laboratories BNO08x IMUs"
    },
    {
        "name": "adafruit-circuitpython-bno08x-rvc",
        "summary": "A simple helper library for using the UART-RVC mode of the BNO08x IMUs"
    },
    {
        "name": "adafruit-circuitpython-boardtest",
        "summary": "Helper for verifying a board definition works as expected"
    },
    {
        "name": "adafruit-circuitpython-busdevice",
        "summary": "CircuitPython bus device classes to manage bus sharing."
    },
    {
        "name": "adafruit-circuitpython-cap1188",
        "summary": "CircuitPython driver for the CAP1188 8-Key Capacitive Touch Sensor Breakout."
    },
    {
        "name": "adafruit-circuitpython-ccs811",
        "summary": "CircuitPython library for CCS811 air quality sensor."
    },
    {
        "name": "adafruit-circuitpython-ch9328",
        "summary": "CircuitPython driver for the CH9328 UART to HID keyboard breakout"
    },
    {
        "name": "adafruit-circuitpython-charlcd",
        "summary": "CircuitPython library for standard character LCDs."
    },
    {
        "name": "adafruit-circuitpython-circuitplayground",
        "summary": "CircuitPython library for Circuit Playground Express"
    },
    {
        "name": "adafruit-circuitpython-clue",
        "summary": "A high-level library representing all the features of the Adafruit CLUE"
    },
    {
        "name": "adafruit-circuitpython-colorsys",
        "summary": "CircuitPython CPython compatible libraries"
    },
    {
        "name": "adafruit-circuitpython-connectionmanager",
        "summary": "A urllib3.poolmanager/urllib3.connectionpool-like library for managing sockets and connections"
    },
    {
        "name": "adafruit-circuitpython-crickit",
        "summary": "CircuitPython library for controlling a Crickit robotics board."
    },
    {
        "name": "adafruit-circuitpython-cst8xx",
        "summary": "CST8xx capacitive touch driver for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-cursorcontrol",
        "summary": "Mouse cursor for interaction with CircuitPython UI elements."
    },
    {
        "name": "adafruit-circuitpython-dash-display",
        "summary": "CircuitPython library for creating Adafruit IO dashboards."
    },
    {
        "name": "adafruit-circuitpython-datetime",
        "summary": "Subset of CPython datetime module"
    },
    {
        "name": "adafruit-circuitpython-debouncer",
        "summary": "CircuitPython pin or arbitrary predicate debouncer."
    },
    {
        "name": "adafruit-circuitpython-debug-i2c",
        "summary": "Wrapper library for debugging I2C."
    },
    {
        "name": "adafruit-circuitpython-dht",
        "summary": "CircuitPython support for DHT11 and DHT22 type temperature/humidity devices"
    },
    {
        "name": "adafruit-circuitpython-display-button",
        "summary": "UI Buttons for displayio"
    },
    {
        "name": "adafruit-circuitpython-display-notification",
        "summary": "Displayio Widgets for displaying notifications"
    },
    {
        "name": "adafruit-circuitpython-display-shapes",
        "summary": "Various common shapes for use with displayio"
    },
    {
        "name": "adafruit-circuitpython-display-text",
        "summary": "Displays text using CircuitPython's displayio."
    },
    {
        "name": "adafruit-circuitpython-displayio-flipclock",
        "summary": "DisplayIO widgets for showing flip clock style animattions changing from one number to another."
    },
    {
        "name": "adafruit-circuitpython-displayio-layout",
        "summary": "CircuitPython helper library for displayio layouts and widgets."
    },
    {
        "name": "adafruit-circuitpython-displayio-sh1106",
        "summary": "DisplayIO compatible library for SH1106 OLED displays"
    },
    {
        "name": "adafruit-circuitpython-displayio-sh1107",
        "summary": "Support for the SH1107 OLED display driver IC"
    },
    {
        "name": "adafruit-circuitpython-displayio-ssd1305",
        "summary": "DisplayIO driver for SSD1305 monochrome displays"
    },
    {
        "name": "adafruit-circuitpython-displayio-ssd1306",
        "summary": "DisplayIO driver for SSD1306 monochrome displays"
    },
    {
        "name": "adafruit-circuitpython-dotstar",
        "summary": "CircuitPython library for DotStar LEDs."
    },
    {
        "name": "adafruit-circuitpython-dps310",
        "summary": "Library for the DPS310 Precision Barometric Pressure Sensor"
    },
    {
        "name": "adafruit-circuitpython-drv2605",
        "summary": "CircuitPython library for DRV2605 haptic motor controller."
    },
    {
        "name": "adafruit-circuitpython-ds1307",
        "summary": "CircuitPython library for DS1307 real time clock."
    },
    {
        "name": "adafruit-circuitpython-ds1841",
        "summary": "I2C Logarithmic Resistor"
    },
    {
        "name": "adafruit-circuitpython-ds18x20",
        "summary": "CircuitPython driver for Dallas 1-Wire temperature sensor."
    },
    {
        "name": "adafruit-circuitpython-ds2413",
        "summary": "CircuitPython library for DS2413 1-Wire Dual Channel Addressable Switch."
    },
    {
        "name": "adafruit-circuitpython-ds248x",
        "summary": "CircuitPython driver for the DS2484 I2C to 1-Wire Bus Adapter"
    },
    {
        "name": "adafruit-circuitpython-ds3231",
        "summary": "CircuitPython library for DS3231 precision real-time clock."
    },
    {
        "name": "adafruit-circuitpython-ds3502",
        "summary": "CircuitPython library for the Maxim DS3502 I2C Potentionmeter"
    },
    {
        "name": "adafruit-circuitpython-ducky",
        "summary": "CircuitPython library for running DuckyScript"
    },
    {
        "name": "adafruit-circuitpython-dymoscale",
        "summary": "CircuitPython interface for DYMO scales."
    },
    {
        "name": "adafruit-circuitpython-ek79686",
        "summary": "CircuitPython `displayio` driver for EK79686-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-emc2101",
        "summary": "Brushless fan controller"
    },
    {
        "name": "adafruit-circuitpython-ens160",
        "summary": "CircuitPython / Python library for ScioSense ENS160 digital multi-gas sensor"
    },
    {
        "name": "adafruit-circuitpython-epd",
        "summary": "CircuitPython library for EPD e-ink displays."
    },
    {
        "name": "adafruit-circuitpython-esp-atcontrol",
        "summary": "CircuitPython driver for communicating using ESP AT command set."
    },
    {
        "name": "adafruit-circuitpython-esp32s2tft",
        "summary": "Helper library for the Adafruit ESP32-S2 TFT Feather"
    },
    {
        "name": "adafruit-circuitpython-esp32spi",
        "summary": "CircuitPython driver library for using ESP32 as WiFi  co-processor using SPI"
    },
    {
        "name": "adafruit-circuitpython-fakerequests",
        "summary": "Fake Network Requests helper that retrieves data from a local file."
    },
    {
        "name": "adafruit-circuitpython-fancyled",
        "summary": "CircuitPython FancyLED helper library for LED animations."
    },
    {
        "name": "adafruit-circuitpython-featherwing",
        "summary": "CircuitPython library that provides FeatherWing specific classes for those that require a significant amount of initialization."
    },
    {
        "name": "adafruit-circuitpython-fingerprint",
        "summary": "CircuitPython library for UART fingerprint sensor."
    },
    {
        "name": "adafruit-circuitpython-floppy",
        "summary": "Access floppy drives from CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-focaltouch",
        "summary": "CircuitPython Focaltouch library for capacitive touch displays."
    },
    {
        "name": "adafruit-circuitpython-fona",
        "summary": "CircuitPython library for the Adafruit FONAA"
    },
    {
        "name": "adafruit-circuitpython-fram",
        "summary": "CircuitPython/Python library to support the I2C and SPI FRAM Breakouts."
    },
    {
        "name": "adafruit-circuitpython-framebuf",
        "summary": "CircuitPython frambuf module, based on the Python frambuf module."
    },
    {
        "name": "adafruit-circuitpython-ft5336",
        "summary": "Touchscreen driver for the FT5336 touch controller"
    },
    {
        "name": "adafruit-circuitpython-funhouse",
        "summary": "Helper library for the FunHouse board"
    },
    {
        "name": "adafruit-circuitpython-fxas21002c",
        "summary": "CircuitPython library for NXP FXAS21002C gyroscope."
    },
    {
        "name": "adafruit-circuitpython-fxos8700",
        "summary": "CircuitPython library for NXP FXOS8700 accelerometer and magnetometer."
    },
    {
        "name": "adafruit-circuitpython-gc-iot-core",
        "summary": "Google Cloud IoT Core Client for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-gfx",
        "summary": "CircuitPython pixel graphics drawing library"
    },
    {
        "name": "adafruit-circuitpython-gizmo",
        "summary": "CircuitPython classes for Adafruit Gizmos"
    },
    {
        "name": "adafruit-circuitpython-gps",
        "summary": "CircuitPython library for GPS modules."
    },
    {
        "name": "adafruit-circuitpython-guvx-i2c",
        "summary": "Python drivers for the GUVA-C32SM and GUVB-C31SM I2C UV sensors"
    },
    {
        "name": "adafruit-circuitpython-hashlib",
        "summary": "Secure hashes and message digests"
    },
    {
        "name": "adafruit-circuitpython-hcsr04",
        "summary": "CircuitPython library for controlling HC-SR04 ultrasonic range sensors."
    },
    {
        "name": "adafruit-circuitpython-hdc302x",
        "summary": "CircuitPython driver for the Adafruit HDC302x Precision Temperature/Humidity breakout"
    },
    {
        "name": "adafruit-circuitpython-hid",
        "summary": "CircuitPython helper library for simulating HID devices."
    },
    {
        "name": "adafruit-circuitpython-ht16k33",
        "summary": "CircuitPython library for HT16K33 LED matrices and segment displays."
    },
    {
        "name": "adafruit-circuitpython-hts221",
        "summary": "Helper library for the HTS221 Humidity and Temperature Sensor"
    },
    {
        "name": "adafruit-circuitpython-httpserver",
        "summary": "Simple HTTP Server for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-htu31d",
        "summary": "Python library for TE HTU31D temperature and humidity sensors"
    },
    {
        "name": "adafruit-circuitpython-hue",
        "summary": "CircuitPython helper library for the Philips Hue"
    },
    {
        "name": "adafruit-circuitpython-husb238",
        "summary": "CircuitPython helper library for the HUSB238 Type C Power Delivery Dummy Breakout"
    },
    {
        "name": "adafruit-circuitpython-hx711",
        "summary": "CircuitPython driver for the HX711 24-bit ADC for Load Cells / Strain Gauges"
    },
    {
        "name": "adafruit-circuitpython-hx8357",
        "summary": "displayio driver for hx8357 and ILI9340 TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-icm20649",
        "summary": "Library for the ST ICM-20649 Wide-Range 6-DoF Accelerometer and Gyro"
    },
    {
        "name": "adafruit-circuitpython-icm20x",
        "summary": "Library for the ST ICM-20X Wide-Range 6-DoF Accelerometer and Gyro Family"
    },
    {
        "name": "adafruit-circuitpython-il0373",
        "summary": "CircuitPython `displayio` driver for IL0373-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-il0398",
        "summary": "CircuitPython displayio drivers for IL0398 driven e-paper displays"
    },
    {
        "name": "adafruit-circuitpython-il91874",
        "summary": "CircuitPython `displayio` driver for IL91874-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-ili9341",
        "summary": "displayio driver for ILI9341 and ILI9340 TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-imageload",
        "summary": "Displays text using CircuitPython's displayio."
    },
    {
        "name": "adafruit-circuitpython-ina219",
        "summary": "CircuitPython library for INA219 high side DC current sensor."
    },
    {
        "name": "adafruit-circuitpython-ina260",
        "summary": "CircuitPython driver for the TI INA260 current and power sensor"
    },
    {
        "name": "adafruit-circuitpython-ina3221",
        "summary": "CircuitPython driver for the INA3221 Triple 0-26 VDC, \u00b13.2 Amp Power Monitor"
    },
    {
        "name": "adafruit-circuitpython-irremote",
        "summary": "CircuitPython library for infrared transmit and receive."
    },
    {
        "name": "adafruit-circuitpython-is31fl3731",
        "summary": "CircuitPython library for IS31FL3731 charlieplex LED matrices."
    },
    {
        "name": "adafruit-circuitpython-is31fl3741",
        "summary": "CircuitPython library for IS31FL3741 RGB LED matrices."
    },
    {
        "name": "adafruit-circuitpython-itertools",
        "summary": "Python's itertools for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-json-stream",
        "summary": null
    },
    {
        "name": "adafruit-circuitpython-jwt",
        "summary": "JSON Web Token Authentication"
    },
    {
        "name": "adafruit-circuitpython-l3gd20",
        "summary": "CircuitPython library for L3GD20 9-DOF absolute orientation IMU fusion breakout."
    },
    {
        "name": "adafruit-circuitpython-lc709203f",
        "summary": "Library for I2C LC709203F battery status and fuel gauge"
    },
    {
        "name": "adafruit-circuitpython-led-animation",
        "summary": "CircuitPython helper for LED colors and animations."
    },
    {
        "name": "adafruit-circuitpython-lidarlite",
        "summary": "A CircuitPython & Python library for Garmin LIDAR Lite sensors over I2C."
    },
    {
        "name": "adafruit-circuitpython-lifx",
        "summary": "LIFX Smart Lighting API Helper"
    },
    {
        "name": "adafruit-circuitpython-lis2mdl",
        "summary": "CircuitPython library for LIS2MDL 3-axis magnetometer."
    },
    {
        "name": "adafruit-circuitpython-lis331",
        "summary": "A library for the ST LIS331 family of high-g 3-axis accelerometers"
    },
    {
        "name": "adafruit-circuitpython-lis3dh",
        "summary": "CircuitPython library for LIS3DH accelerometer."
    },
    {
        "name": "adafruit-circuitpython-lis3mdl",
        "summary": "CircuitPython helper library for the LIS3MDL 3-axis magnetometer"
    },
    {
        "name": "adafruit-circuitpython-logging",
        "summary": "Logging module for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-lps2x",
        "summary": "Library for the ST LPS2x family of pressure sensors"
    },
    {
        "name": "adafruit-circuitpython-lps35hw",
        "summary": "A driver for the ST LPS35HW water resistant mems pressure sensor"
    },
    {
        "name": "adafruit-circuitpython-lsm303",
        "summary": "CircuitPython library for LSM303 6-DoF with 3-axis accelerometer and magnetometer."
    },
    {
        "name": "adafruit-circuitpython-lsm303-accel",
        "summary": "CircuitPython library for LSM303 's 3-axis accelerometer."
    },
    {
        "name": "adafruit-circuitpython-lsm303agr-mag",
        "summary": "CircuitPython library for LSM303AGR's 3-axis magnetometer."
    },
    {
        "name": "adafruit-circuitpython-lsm303dlh-mag",
        "summary": "CircuitPython library for LSM303DLH's 3-axis magnetometer."
    },
    {
        "name": "adafruit-circuitpython-lsm6ds",
        "summary": "CircuitPython helper library for the LSM6DS family of motion sensors from ST"
    },
    {
        "name": "adafruit-circuitpython-lsm6dsox",
        "summary": "CircuitPython library for the ST LSM6DSOX 6-axis Accelerometer and Gyro"
    },
    {
        "name": "adafruit-circuitpython-lsm9ds0",
        "summary": "CircuitPython library for LSM9DS0 accelerometer, magnetometer, gyroscope."
    },
    {
        "name": "adafruit-circuitpython-lsm9ds1",
        "summary": "CircuitPython library for LSM9DS1 accelerometer, magnetometer, gyroscope."
    },
    {
        "name": "adafruit-circuitpython-ltr329-ltr303",
        "summary": "Python driver for LTR-329/303 light sensors"
    },
    {
        "name": "adafruit-circuitpython-ltr390",
        "summary": "Adafruit CircuitPython library for the LTR390"
    },
    {
        "name": "adafruit-circuitpython-macropad",
        "summary": "A helper library for the Adafruit MacroPad RP2040"
    },
    {
        "name": "adafruit-circuitpython-magtag",
        "summary": "Helper library for the Adafruit MagTag"
    },
    {
        "name": "adafruit-circuitpython-matrixkeypad",
        "summary": "CircuitPython library for passive matrix keypads."
    },
    {
        "name": "adafruit-circuitpython-matrixportal",
        "summary": "CircuitPython helper for Adafruit MatrixPortal M4, Adafruit RGB Matrix Shield + Metro M4 Airlift Lite, and Adafruit RGB Matrix FeatherWings"
    },
    {
        "name": "adafruit-circuitpython-max1704x",
        "summary": "MAX17048 or MAX17049 battery fuel gauge Python/CircuitPython library"
    },
    {
        "name": "adafruit-circuitpython-max31855",
        "summary": "CircuitPython library for controlling a MAX31855 Thermocouple sensor chip."
    },
    {
        "name": "adafruit-circuitpython-max31856",
        "summary": "CircuitPython library for the MAX31856 Universal Thermocouple Amplifier."
    },
    {
        "name": "adafruit-circuitpython-max31865",
        "summary": "CircuitPython library for MAX31865 thermocouple amplifier."
    },
    {
        "name": "adafruit-circuitpython-max7219",
        "summary": "CircuitPython library for MAX7219 LED matrix driver."
    },
    {
        "name": "adafruit-circuitpython-max9744",
        "summary": "CircuitPython library for MAX9744 20W class D amplifier."
    },
    {
        "name": "adafruit-circuitpython-mcp230xx",
        "summary": "CircuitPython library for controlling a MCP23008 or MCP23017 I2C GPIO expander."
    },
    {
        "name": "adafruit-circuitpython-mcp2515",
        "summary": "A CircuitPython library for working with the MCP2515 CAN bus controller"
    },
    {
        "name": "adafruit-circuitpython-mcp3421",
        "summary": "CircuitPython driver for the MCP3421 analog to digital converter"
    },
    {
        "name": "adafruit-circuitpython-mcp3xxx",
        "summary": "CircuitPython library for the MCP3xxx Analog-to-Digital converters."
    },
    {
        "name": "adafruit-circuitpython-mcp4725",
        "summary": "CircuitPython library for MCP4725 digital to analog converter."
    },
    {
        "name": "adafruit-circuitpython-mcp4728",
        "summary": "Helper library for the MCP4728 I2C 12-bit Quad DAC"
    },
    {
        "name": "adafruit-circuitpython-mcp9600",
        "summary": "CircuitPython library for the Adafruit MCP9600 breakout"
    },
    {
        "name": "adafruit-circuitpython-mcp9808",
        "summary": "CircuitPython library for MCP9808 high accuracy temperature sensor."
    },
    {
        "name": "adafruit-circuitpython-midi",
        "summary": "A CircuitPython helper for encoding/decoding MIDI packets over a MIDI or UART connection."
    },
    {
        "name": "adafruit-circuitpython-miniesptool",
        "summary": "CircuitPython ROM loader for ESP chips, works with ESP8266 or ESP32."
    },
    {
        "name": "adafruit-circuitpython-minimqtt",
        "summary": "MQTT client library for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-miniqr",
        "summary": "A non-hardware dependant miniature QR generator library. All native Python!"
    },
    {
        "name": "adafruit-circuitpython-mlx90393",
        "summary": "CircuitPython driver for the MLX90393 3-axis magnetometer."
    },
    {
        "name": "adafruit-circuitpython-mlx90395",
        "summary": "CircuitPython helper library for using the Adafruit MLX90395 tri-Axis magnetometer breakout"
    },
    {
        "name": "adafruit-circuitpython-mlx90614",
        "summary": "CircuitPython module for the Melexis MLX90614 Contact-less InfraredTemperature sensor."
    },
    {
        "name": "adafruit-circuitpython-mlx90640",
        "summary": "Driver for the MLX90640 thermal camera"
    },
    {
        "name": "adafruit-circuitpython-mlx90939",
        "summary": "CircuitPython driver for the MLX90393 3-axis magnetometer."
    },
    {
        "name": "adafruit-circuitpython-mma8451",
        "summary": "CircuitPython library for MMA8451 3-axis accelerometer.."
    },
    {
        "name": "adafruit-circuitpython-mmc56x3",
        "summary": "Magnetometer sensor library"
    },
    {
        "name": "adafruit-circuitpython-monsterm4sk",
        "summary": "Helper library for the MONSTER M4SK device. Allows usage of screens and other built-in hardware."
    },
    {
        "name": "adafruit-circuitpython-motor",
        "summary": "CircuitPython helper library provides higher level objects to control motors and servos."
    },
    {
        "name": "adafruit-circuitpython-motorkit",
        "summary": "CircuitPython helper library for DC & Stepper Motor FeatherWing, Shield, and Pi Hat kits."
    },
    {
        "name": "adafruit-circuitpython-mpl115a2",
        "summary": "CircuitPython driver for MPL115A2 I2C Barometric Pressure/Temperature Sensor."
    },
    {
        "name": "adafruit-circuitpython-mpl3115a2",
        "summary": "CircuitPython library for MPL3115A2 barometric pressure and temperature sensor."
    },
    {
        "name": "adafruit-circuitpython-mpr121",
        "summary": "CircuitPython library for MPR121 capacitive touch breakout board."
    },
    {
        "name": "adafruit-circuitpython-mprls",
        "summary": "CircuitPython library to support Honeywell MPRLS digital pressure sensors."
    },
    {
        "name": "adafruit-circuitpython-mpu6050",
        "summary": "CircuitPython helper library for the MPU6050 6-DoF Accelerometer and Gyroscope"
    },
    {
        "name": "adafruit-circuitpython-ms8607",
        "summary": "CircuitPython driver for the MS8607 PTH sensor"
    },
    {
        "name": "adafruit-circuitpython-msa301",
        "summary": "CircuitPython library for the MSA301/MSA311 Accelerometers"
    },
    {
        "name": "adafruit-circuitpython-neokey",
        "summary": "CircuitPython library for using Adafruit NeoKey."
    },
    {
        "name": "adafruit-circuitpython-neopixel",
        "summary": "CircuitPython library for NeoPixel LEDs."
    },
    {
        "name": "adafruit-circuitpython-neopixel-spi",
        "summary": "SPI driven CircuitPython driver for neopixels."
    },
    {
        "name": "adafruit-circuitpython-neopxl8",
        "summary": "PIO-driven 8-way concurrent NeoPixel driver for RP2040"
    },
    {
        "name": "adafruit-circuitpython-neotrellis",
        "summary": "CircuitPython library for using Adafruit NeoTrellis."
    },
    {
        "name": "adafruit-circuitpython-ntp",
        "summary": "Network Time Protocol (NTP) helper for Python"
    },
    {
        "name": "adafruit-circuitpython-nunchuk",
        "summary": "CircuitPython library for Nintendo Nunchuk controller"
    },
    {
        "name": "adafruit-circuitpython-oauth2",
        "summary": "CircuitPython helper for OAuth2.0 authorization to access Google APIs."
    },
    {
        "name": "adafruit-circuitpython-onewire",
        "summary": "CircuitPython OneWire helper library for 1-wire bus devices."
    },
    {
        "name": "adafruit-circuitpython-ov2640",
        "summary": "CircuitPython driver for OV2640 cameras"
    },
    {
        "name": "adafruit-circuitpython-ov5640",
        "summary": "CircuitPython driver for OV5640 Camera"
    },
    {
        "name": "adafruit-circuitpython-ov7670",
        "summary": "CircuitPython driver for OV7670 cameras"
    },
    {
        "name": "adafruit-circuitpython-pastebin",
        "summary": "CircuitPython library for interacting with online pastebin services"
    },
    {
        "name": "adafruit-circuitpython-pca9554",
        "summary": "CircuitPython library for Adafruit PCA9554 GPIO expanders"
    },
    {
        "name": "adafruit-circuitpython-pca9685",
        "summary": "CircuitPython driver for motor, stepper, and servo based on PCA9685."
    },
    {
        "name": "adafruit-circuitpython-pcd8544",
        "summary": "CircuitPython display control library for Nokia PCD8544 monochrome displays."
    },
    {
        "name": "adafruit-circuitpython-pcf8523",
        "summary": "CircuitPython library for PCF8523 real time clock."
    },
    {
        "name": "adafruit-circuitpython-pcf8563",
        "summary": "CircuitPython library for PCF8563 real time clock."
    },
    {
        "name": "adafruit-circuitpython-pcf8574",
        "summary": "Python library for PCF8574 GPIO expander"
    },
    {
        "name": "adafruit-circuitpython-pcf8575",
        "summary": "CircuitPython library for Adafruit PCF8575 GPIO expander"
    },
    {
        "name": "adafruit-circuitpython-pcf8591",
        "summary": "ADC+DAC Combo"
    },
    {
        "name": "adafruit-circuitpython-pct2075",
        "summary": "CircuitPython library for the NXP PCT2075 Digital Temperature Sensor"
    },
    {
        "name": "adafruit-circuitpython-pio-uart",
        "summary": "PIO implementation of CircuitPython UART API"
    },
    {
        "name": "adafruit-circuitpython-pioasm",
        "summary": "Simple assembler to convert pioasm to bytes"
    },
    {
        "name": "adafruit-circuitpython-pixel-framebuf",
        "summary": "Neopixel and Dotstar Framebuffer Helper"
    },
    {
        "name": "adafruit-circuitpython-pixelbuf",
        "summary": "A pure Python implementation of adafruit_pixelbuf for smaller boards."
    },
    {
        "name": "adafruit-circuitpython-pixelmap",
        "summary": "CircuitPython library for mapping multiple neopixels to behave as one for the purposes of setting colors or showing animations."
    },
    {
        "name": "adafruit-circuitpython-pixie",
        "summary": "CircuitPython library for Pixie chainable 3W smart LED."
    },
    {
        "name": "adafruit-circuitpython-pm25",
        "summary": "CircuitPython library for PM2.5 Air Quality Sensors"
    },
    {
        "name": "adafruit-circuitpython-pn532",
        "summary": "CircuitPython library for controlling PN532 RFID/NFC reader-writer."
    },
    {
        "name": "adafruit-circuitpython-portalbase",
        "summary": "Base Library for the Portal-style libraries."
    },
    {
        "name": "adafruit-circuitpython-progressbar",
        "summary": "Dynamic progress bar widget for CircuitPython displays"
    },
    {
        "name": "adafruit-circuitpython-prompt-toolkit",
        "summary": "Slimmed down implementation of prompt_toolkit for CircuitPython"
    },
    {
        "name": "adafruit-circuitpython-pybadger",
        "summary": "Badge-focused CircuitPython helper library for PyBadge, PyBadge LC, PyGamer and CLUE"
    },
    {
        "name": "adafruit-circuitpython-pycamera",
        "summary": "Library for the Adafruit PyCamera"
    },
    {
        "name": "adafruit-circuitpython-pypixelbuf",
        "summary": "Pure python implementation of _pixelbuf for smaller boards."
    },
    {
        "name": "adafruit-circuitpython-pyportal",
        "summary": "CircuitPython driver for Adafruit PyPortal"
    },
    {
        "name": "adafruit-circuitpython-qualia",
        "summary": "Portal Style Library for the Adafruit Qualia ESP32-S3"
    },
    {
        "name": "adafruit-circuitpython-qwiictwist",
        "summary": "CircuitPython for the Sparkfun Qwiic Twist Rotary Encoder"
    },
    {
        "name": "adafruit-circuitpython-ra8875",
        "summary": "CircuitPython driver for TFT Touch screens based on RA8875."
    },
    {
        "name": "adafruit-circuitpython-radial-controller",
        "summary": "HID Radial Controller device helper library"
    },
    {
        "name": "adafruit-circuitpython-register",
        "summary": "CircuitPython data descriptor classes to represent hardware registers on I2C and SPI devices."
    },
    {
        "name": "adafruit-circuitpython-register-spi",
        "summary": "Python data descriptor classes to represent hardware registers on SPI devices."
    },
    {
        "name": "adafruit-circuitpython-requests",
        "summary": "A requests-like library for web interfacing"
    },
    {
        "name": "adafruit-circuitpython-rfm",
        "summary": "Support for RFM69 and RFM9x modules"
    },
    {
        "name": "adafruit-circuitpython-rfm69",
        "summary": "CircuitPython library for RFM69 packet radio."
    },
    {
        "name": "adafruit-circuitpython-rfm9x",
        "summary": "CircuitPython library for RFM95/6/7/8 LoRa 433/915mhz radio modules."
    },
    {
        "name": "adafruit-circuitpython-rgb-display",
        "summary": "CircuitPython library for RGB displays."
    },
    {
        "name": "adafruit-circuitpython-rgbled",
        "summary": "CircuitPython driver for RGB LEDs"
    },
    {
        "name": "adafruit-circuitpython-rockblock",
        "summary": "CircuitPython driver for Rock Seven RockBLOCK Iridium satellite modem"
    },
    {
        "name": "adafruit-circuitpython-rplidar",
        "summary": "RPLidar support"
    },
    {
        "name": "adafruit-circuitpython-rsa",
        "summary": "RSA implementation based on python-rsa"
    },
    {
        "name": "adafruit-circuitpython-rtttl",
        "summary": "CircuitPython library for playing RTTTL melodies."
    },
    {
        "name": "adafruit-circuitpython-s35710",
        "summary": "CircuitPython driver for the S-35710 low-power wake up timer"
    },
    {
        "name": "adafruit-circuitpython-scd30",
        "summary": "Helper library for the SCD30 CO2 sensor"
    },
    {
        "name": "adafruit-circuitpython-scd4x",
        "summary": "Driver for Sensirion SCD4X CO2 sensor"
    },
    {
        "name": "adafruit-circuitpython-sd",
        "summary": "CircuitPython library for SD cards."
    },
    {
        "name": "adafruit-circuitpython-seesaw",
        "summary": "CircuitPython library for controlling a SeeSaw helper chip."
    },
    {
        "name": "adafruit-circuitpython-servokit",
        "summary": "CircuitPython helper library for PWM/Servo FeatherWing, Shield, and Pi HAT and Bonnet kits."
    },
    {
        "name": "adafruit-circuitpython-sgp30",
        "summary": "CircuitPython library for Sensirion SGP30 gas sensor with eCO2 and TVOC."
    },
    {
        "name": "adafruit-circuitpython-sgp40",
        "summary": "CircuitPython library for the Adafruit SGP40 Air Quality Sensor / VOC Index Sensor Breakouts"
    },
    {
        "name": "adafruit-circuitpython-sharpmemorydisplay",
        "summary": "CircuitPython display control library for Sharp memory displays."
    },
    {
        "name": "adafruit-circuitpython-sht31d",
        "summary": "CircuitPython library for SHT31-D temperature and humidity sensor."
    },
    {
        "name": "adafruit-circuitpython-sht4x",
        "summary": "Python library for Sensirion SHT4x temperature and humidity sensors"
    },
    {
        "name": "adafruit-circuitpython-shtc3",
        "summary": "A helper library for using the Senserion SHTC3 Humidity and Temperature Sensor"
    },
    {
        "name": "adafruit-circuitpython-si1145",
        "summary": "CircuitPython helper library for the SI1145 Digital UV Index IR Visible Light Sensor"
    },
    {
        "name": "adafruit-circuitpython-si4713",
        "summary": "CircuitPython library for SI4713 FM RDS transmitter."
    },
    {
        "name": "adafruit-circuitpython-si5351",
        "summary": "CircuitPython library for SI5351 clock generator module."
    },
    {
        "name": "adafruit-circuitpython-si7021",
        "summary": "CircuitPython library for SI7021 Temperature and Humidity Sensor."
    },
    {
        "name": "adafruit-circuitpython-simple-text-display",
        "summary": "A helper library for displaying lines of text on a microcontroller with a built-in display, or externally connected display."
    },
    {
        "name": "adafruit-circuitpython-simpleio",
        "summary": "CircuitPython helper library to simplify hardware interactions."
    },
    {
        "name": "adafruit-circuitpython-simplemath",
        "summary": "Math utility functions"
    },
    {
        "name": "adafruit-circuitpython-slideshow",
        "summary": "CircuitPython helper library for displaying a slideshow of images on a display."
    },
    {
        "name": "adafruit-circuitpython-spd1656",
        "summary": "Driver for SPD1656 driven ACeP (7-color) e-paper displays"
    },
    {
        "name": "adafruit-circuitpython-ssd1305",
        "summary": "Framebuf (non-displayio) driver for SSD1305 displays"
    },
    {
        "name": "adafruit-circuitpython-ssd1306",
        "summary": "CircuitPython library for SSD1306 OLED displays."
    },
    {
        "name": "adafruit-circuitpython-ssd1322",
        "summary": "DisplayIO driver for grayscale OLEDs drive by SSD1322"
    },
    {
        "name": "adafruit-circuitpython-ssd1325",
        "summary": "DisplayIO driver for grayscale OLEDs drive by SSD1325"
    },
    {
        "name": "adafruit-circuitpython-ssd1327",
        "summary": "DisplayIO driver for grayscale OLEDs drive by SSD1327"
    },
    {
        "name": "adafruit-circuitpython-ssd1331",
        "summary": "displayio driver for SSD1331 TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-ssd1351",
        "summary": "displayio driver for SSD1351 TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-ssd1608",
        "summary": "CircuitPython `displayio` drivers for SSD1608-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-ssd1675",
        "summary": "CircuitPython `displayio` drivers for SSD1675-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-ssd1680",
        "summary": "CircuitPython `displayio` drivers for SSD1680-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-ssd1681",
        "summary": "CircuitPython `displayio` drivers for SSD1681-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-st7565",
        "summary": "CircuitPython display control library for devices using the ST7565 graphic display driver IC."
    },
    {
        "name": "adafruit-circuitpython-st7735",
        "summary": "displayio driver for ST7735 TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-st7735r",
        "summary": "displayio driver for ST7735R TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-st7789",
        "summary": "displayio driver for ST7789 TFT-LCD displays."
    },
    {
        "name": "adafruit-circuitpython-stmpe610",
        "summary": "CircuitPython library for STMPE610 Resistive Touch Screen Controller."
    },
    {
        "name": "adafruit-circuitpython-tc74",
        "summary": "CircuitPython library for the Microchip TC74 Digital Temperature Sensor"
    },
    {
        "name": "adafruit-circuitpython-tca8418",
        "summary": "CircuitPython / Python library for TCA8418 Keyboard Multiplexor"
    },
    {
        "name": "adafruit-circuitpython-tca9548a",
        "summary": "CircuitPython driver for the TCA9548A I2C Multiplexer."
    },
    {
        "name": "adafruit-circuitpython-tcs34725",
        "summary": "CircuitPython library for TCS34725 color sensor."
    },
    {
        "name": "adafruit-circuitpython-templateengine",
        "summary": "Templating engine to substitute variables into a template string. Templates can also include conditional logic and loops. Often used for web pages."
    },
    {
        "name": "adafruit-circuitpython-testrepo",
        "summary": "CircuitPython test library"
    },
    {
        "name": "adafruit-circuitpython-tfmini",
        "summary": "A CircuitPython/Python library for Benewake`s TF mini distance sensor"
    },
    {
        "name": "adafruit-circuitpython-thermal-printer",
        "summary": "CircuitPython library for controlling thermal printers."
    },
    {
        "name": "adafruit-circuitpython-thermistor",
        "summary": "CircuitPython library for Thermistor thermal resistor temperature sensor."
    },
    {
        "name": "adafruit-circuitpython-ticks",
        "summary": "Work with intervals and deadlines in milliseconds"
    },
    {
        "name": "adafruit-circuitpython-tinylora",
        "summary": "CircuitPython library for LoRaWAN and The Things Network."
    },
    {
        "name": "adafruit-circuitpython-tla202x",
        "summary": "Library for the TI TLA202x 12-bit ADCs"
    },
    {
        "name": "adafruit-circuitpython-tlc5947",
        "summary": "CircuitPython library for TLC5947 12-bit 24 channel LED PWM driver."
    },
    {
        "name": "adafruit-circuitpython-tlc59711",
        "summary": "CircuitPython library for TLC59711 16-bit 12 channel LED PWM driver."
    },
    {
        "name": "adafruit-circuitpython-tlv493d",
        "summary": "CircuitPython helper library for the TLV493D 3-axis magnetometer"
    },
    {
        "name": "adafruit-circuitpython-tm1814",
        "summary": "TM1814 RGB(W) LED driver for RP2 microcontrollers"
    },
    {
        "name": "adafruit-circuitpython-tmp006",
        "summary": "CircuitPython library for TMP006 contactless IR thermometer."
    },
    {
        "name": "adafruit-circuitpython-tmp007",
        "summary": "CircuitPython library for TMP007 contactless IR thermometer."
    },
    {
        "name": "adafruit-circuitpython-tmp117",
        "summary": "CircuitPython library for the TI TMP117 Temperature sensor"
    },
    {
        "name": "adafruit-circuitpython-touchscreen",
        "summary": "CircuitPython library for 4-wire resistive touchscreens"
    },
    {
        "name": "adafruit-circuitpython-tpa2016",
        "summary": "CircuitPython driver for TPA2016 Class D Amplifier."
    },
    {
        "name": "adafruit-circuitpython-trellis",
        "summary": "CircuitPython library for Adafruit Trellis boards."
    },
    {
        "name": "adafruit-circuitpython-trellism4",
        "summary": "CircuitPython library Trellis M4 Express."
    },
    {
        "name": "adafruit-circuitpython-tsc2007",
        "summary": "Python library for TSC2007 resistive touch screen driver"
    },
    {
        "name": "adafruit-circuitpython-tsl2561",
        "summary": "CircuitPython library for TSL2561 Light Sensor."
    },
    {
        "name": "adafruit-circuitpython-tsl2591",
        "summary": "CircuitPython library for TSL2591 high precision light sensor."
    },
    {
        "name": "adafruit-circuitpython-tt21100",
        "summary": "Basic driver for TT21100 touchscreen drivers"
    },
    {
        "name": "adafruit-circuitpython-turtle",
        "summary": "Turtle graphics library for CircuitPython and displayio"
    },
    {
        "name": "adafruit-circuitpython-typing",
        "summary": "Types needed for type annotation that are not in `typing`"
    },
    {
        "name": "adafruit-circuitpython-uc8151d",
        "summary": "CircuitPython `displayio` driver for US8151D-based ePaper displays"
    },
    {
        "name": "adafruit-circuitpython-us100",
        "summary": "CircuitPython library for reading distance and temperature via US-100 ultra-sonic sensor."
    },
    {
        "name": "adafruit-circuitpython-usb-host-descriptors",
        "summary": "Helpers for getting USB descriptors"
    },
    {
        "name": "adafruit-circuitpython-usb-host-mass-storage",
        "summary": "CircuitPython BlockDevice for USB mass storage devices"
    },
    {
        "name": "adafruit-circuitpython-usb-host-midi",
        "summary": "CircuitPython USB host driver for MIDI devices"
    },
    {
        "name": "adafruit-circuitpython-vc0706",
        "summary": "CircuitPython library for VC0706 serial TTL camera."
    },
    {
        "name": "adafruit-circuitpython-vcnl4010",
        "summary": "CircuitPython library for VCNL4010 proximity and light sensor."
    },
    {
        "name": "adafruit-circuitpython-vcnl4020",
        "summary": "Driver for the VCNL4020 proximity and light sensor"
    },
    {
        "name": "adafruit-circuitpython-vcnl4040",
        "summary": "A CircuitPython library for the VCNL4040 proximity and ambient light sensor."
    },
    {
        "name": "adafruit-circuitpython-vcnl4200",
        "summary": "CircuitPython driver for the Adafruit VCNL4200 Long Distance IR Proximity and Light Sensor"
    },
    {
        "name": "adafruit-circuitpython-veml6070",
        "summary": "CircuitPython library for VEML6070 UV Index Sensor Breakout."
    },
    {
        "name": "adafruit-circuitpython-veml6075",
        "summary": "CircuitPython library for interfacing with VEML6075 UV sensor"
    },
    {
        "name": "adafruit-circuitpython-veml7700",
        "summary": "CircuitPython driver for VEML7700 high precision I2C ambient light sensor."
    },
    {
        "name": "adafruit-circuitpython-vl53l0x",
        "summary": "CircuitPython library for VL53L0X time of flight distance sensor."
    },
    {
        "name": "adafruit-circuitpython-vl53l1x",
        "summary": "CircuitPython module for interacting with the VL53L1X distance sensor."
    },
    {
        "name": "adafruit-circuitpython-vl53l4cd",
        "summary": "CircuitPython helper library for the VL53L4CD time of flight distance sensor."
    },
    {
        "name": "adafruit-circuitpython-vl6180x",
        "summary": "CircuitPython library for VL6180X time of flight distance sensor."
    },
    {
        "name": "adafruit-circuitpython-vs1053",
        "summary": "Driver for interacting and playing media files with the VS1053 audio codec over a SPI connection."
    },
    {
        "name": "adafruit-circuitpython-wave",
        "summary": "Read and write standard WAV-format files"
    },
    {
        "name": "adafruit-circuitpython-waveform",
        "summary": "CircuitPython library for generating simple waveforms for audio."
    },
    {
        "name": "adafruit-circuitpython-wii-classic",
        "summary": "CircuitPython library for Nintendo Wii Classic controllers."
    },
    {
        "name": "adafruit-circuitpython-wiznet5k",
        "summary": "Pure-Python interface for WIZNET 5k ethernet modules."
    },
    {
        "name": "adafruit-circuitpython-wm8960",
        "summary": "CircuitPython driver for WM8960 Stereo CODEC"
    },
    {
        "name": "adafruit-circuitpython-ws2801",
        "summary": "CircuitPython library for WS2801 LEDs."
    },
    {
        "name": "adafruit-circuitpython-wsgi",
        "summary": "CircuitPython framework for creating WSGI compatible web server applications."
    },
    {
        "name": "adafruit-micropython-register",
        "summary": "MicroPython data descriptor classes to represent hardware registers on I2C and SPI devices."
    },
    {
        "name": "as7343-micropython",
        "summary": "MicroPython device library for the AS7343 14-channel spectral sensor"
    },
    {
        "name": "barbudor-circuitpython-ina3221",
        "summary": "CircuitPython library for INA3221 triple channel current sensor."
    },
    {
        "name": "be-micropython-nextion",
        "summary": "MicroPython Nextion serial displays library"
    },
    {
        "name": "biffobear-circuitpython-as3935",
        "summary": "CircuitPython driver library for the AS3935 lightning detector."
    },
    {
        "name": "bts7960-micropython",
        "summary": "Project to manage H-Brigde model BTS7960 with micropython"
    },
    {
        "name": "circuitpython-ArrowLine",
        "summary": "CircuitPython library to draw Arrowlines."
    },
    {
        "name": "circuitpython-Candlesticks",
        "summary": "CandleSticks for CircuitPython"
    },
    {
        "name": "circuitpython-Color-Picker",
        "summary": "Colopicker en CircuitPython for TFT displays"
    },
    {
        "name": "circuitpython-MorseCode",
        "summary": "Morse Code Library for CircuitPython"
    },
    {
        "name": "circuitpython-adt7410",
        "summary": "CircuitPython Driver for the Analog Devices ADT7410 Temperature Sensor"
    },
    {
        "name": "circuitpython-ansi-escape-code",
        "summary": "simple helper library for common ANSI escape codes"
    },
    {
        "name": "circuitpython-async-button",
        "summary": "a library for reading buttons using asyncio"
    },
    {
        "name": "circuitpython-async-buzzer",
        "summary": "Play simple tunes on a piezo buzzer asynchronously"
    },
    {
        "name": "circuitpython-azurecustomvision-prediction",
        "summary": "CircuitPython prediction library for the Azure custom vision SDK"
    },
    {
        "name": "circuitpython-base64",
        "summary": "RFC 3548: Base16, Base32, Base64 Data Encodings"
    },
    {
        "name": "circuitpython-bma220",
        "summary": "BMA220 Bosch Circuitpython Driver library"
    },
    {
        "name": "circuitpython-bma400",
        "summary": "BMA400 Bosch Accelerometer CircuitPython Driver"
    },
    {
        "name": "circuitpython-bma423",
        "summary": "CircuitPython Driver for the Bosch BMA423 accelerometer included in the lilygo watch"
    },
    {
        "name": "circuitpython-bmi160",
        "summary": "Driver for the BMI160 sensor"
    },
    {
        "name": "circuitpython-bmp180",
        "summary": "CircuitPython driver for the bmp180 sensor"
    },
    {
        "name": "circuitpython-bmp384",
        "summary": "CircuitPython Driver for the Bosch BMP384 Pressure and Temperature sensor"
    },
    {
        "name": "circuitpython-bmp581",
        "summary": "CircuitPython Driver for the Bosch BMP581 pressure sensor"
    },
    {
        "name": "circuitpython-boxplot",
        "summary": "calculates boxplot and creates its graphical representation"
    },
    {
        "name": "circuitpython-build-tools",
        "summary": "CircuitPython library build tools"
    },
    {
        "name": "circuitpython-button-handler",
        "summary": "This helper library simplifies the usage of buttons with CircuitPython, by detecting and differentiating button inputs, returning a set of the inputs and calling their corresponding functions."
    },
    {
        "name": "circuitpython-caveble",
        "summary": "Cave Surveying Bluetooth Protocol"
    },
    {
        "name": "circuitpython-cirque-pinnacle",
        "summary": "A CircuitPython driver for Cirque Pinnacle (1CA027) touch controller used in Cirque Trackpads"
    },
    {
        "name": "circuitpython-consumer-control-extended",
        "summary": "A big list of all HID consumer controls"
    },
    {
        "name": "circuitpython-cst816",
        "summary": "CircuitPython driver for the CST816 capacitive touch screen IC"
    },
    {
        "name": "circuitpython-csv",
        "summary": "CircuitPython helper library for working with CSV files"
    },
    {
        "name": "circuitpython-dfrobot-gravity-drf0627-dual-uart",
        "summary": "CircuitPython library for the DF DFRobot_Gravity_DRF0627_Dual_Uart"
    },
    {
        "name": "circuitpython-display-frame",
        "summary": "CircuitPython displayio widget to create a rounded rectangle frame with text label at the top center."
    },
    {
        "name": "circuitpython-display-ht16k33",
        "summary": "On Display Simulation for an HT16K33 driver. Works with 16x8 and 8x8 matrices."
    },
    {
        "name": "circuitpython-displayio-annotation",
        "summary": "A CircuitPython DisplayIO widget for annotating other widgets or freeform positions."
    },
    {
        "name": "circuitpython-displayio-cartesian",
        "summary": "A cartesian plane widget for displaying graphical information."
    },
    {
        "name": "circuitpython-displayio-effects",
        "summary": "Add some flair to your widgets with effects!"
    },
    {
        "name": "circuitpython-displayio-flipinput",
        "summary": "A flip style input selector. The value changes based on touch inputs"
    },
    {
        "name": "circuitpython-displayio-listselect",
        "summary": "ListSelect widget for circuitpython displayio. Display a list of strings with a selection indicator allow user to move selection up and down."
    },
    {
        "name": "circuitpython-displayio-switchround",
        "summary": "A sliding switch widget with a round shape."
    },
    {
        "name": "circuitpython-equalizer",
        "summary": "Equalizer Graphic Representation for CircuitPython"
    },
    {
        "name": "circuitpython-esp32connection",
        "summary": "A WiFi connection helper for ESP32-based boards"
    },
    {
        "name": "circuitpython-fake-bme280",
        "summary": "BME280 Driver for CircuitPython used for testing functionality with no hardware attached"
    },
    {
        "name": "circuitpython-functools",
        "summary": "A CircuitPython implementation of CPython's functools library"
    },
    {
        "name": "circuitpython-gauge",
        "summary": "CircuitPython Gauge"
    },
    {
        "name": "circuitpython-gp2y0e02b",
        "summary": "Driver for the GP2Y0E02B distance sensor"
    },
    {
        "name": "circuitpython-gpio-expander",
        "summary": "CircuitPython helper library for gpio expanders (Texas Instrument PCA95xx and TCA95xx chips)."
    },
    {
        "name": "circuitpython-gt911",
        "summary": "CircuitPython Driver for Goodix GT911-based touch screens"
    },
    {
        "name": "circuitpython-h3lis200dl",
        "summary": "CircuitPython Driver for the ST H3LIS200DL Accelerometer"
    },
    {
        "name": "circuitpython-hmac",
        "summary": "HMAC (Keyed-Hashing for Message Authentication) Python module. Implements the HMAC algorithm as described by RFC 2104."
    },
    {
        "name": "circuitpython-homie",
        "summary": "Homie specifications for MQTT implemented in CircuitPython"
    },
    {
        "name": "circuitpython-i2c-button",
        "summary": "CircuitPython I2C Button \u00e0 la Sparkfun Qwiic Button/Switch/Arcade"
    },
    {
        "name": "circuitpython-i2c-expanders",
        "summary": "Drivers for various I2C GPIO expanders."
    },
    {
        "name": "circuitpython-isl29125",
        "summary": "driver for the isl29125 light sensor"
    },
    {
        "name": "circuitpython-jepler-udecimal",
        "summary": "Reduced version of the decimal library for CircuitPython"
    },
    {
        "name": "circuitpython-jled",
        "summary": "Non-blocking LED controlling library"
    },
    {
        "name": "circuitpython-kernel",
        "summary": "CircuitPython Kernel enables CircuitPython to be used in Jupyter Notebooks for learning Python coding with microcontrollers."
    },
    {
        "name": "circuitpython-kx132",
        "summary": "CircuitPython Driver for the Kionix KX132 Accelerometer"
    },
    {
        "name": "circuitpython-laser-at",
        "summary": "Driver for an inexpensive laser rangefinder module, made by AT, available on aliexpress."
    },
    {
        "name": "circuitpython-laser-egismos",
        "summary": "Device driver for the egismos series of lasers, available at https://www.egismos.com/laser-measuring-optoelectronics-module"
    },
    {
        "name": "circuitpython-lilygo-t-deck",
        "summary": "CircuitPython drivers for the LILYGO T-Deck peripherals."
    },
    {
        "name": "circuitpython-lps28",
        "summary": "LPS28 pressure sensor drive for CircuitPython"
    },
    {
        "name": "circuitpython-mag-cal",
        "summary": "Calibrate magnetometer and accelerometer readings"
    },
    {
        "name": "circuitpython-mc3479",
        "summary": "MC3479 Accelerometer Driver"
    },
    {
        "name": "circuitpython-mcp48xx",
        "summary": "CircuitPython library for the MCP4801, MCP4811, MCP4821, MCP4802, MCP4812, and MCP4822 digital to analog converters."
    },
    {
        "name": "circuitpython-microosc",
        "summary": "Minimal OSC parser and server for CircuitPython and CPython"
    },
    {
        "name": "circuitpython-mocks",
        "summary": "A library of mock structures for soft-testing CircuitPython-based projects."
    },
    {
        "name": "circuitpython-noise",
        "summary": "Simplex noise (like Perlin) for CircuitPython"
    },
    {
        "name": "circuitpython-nrf24l01",
        "summary": "Circuitpython driver library for the nRF24L01 transceiver"
    },
    {
        "name": "circuitpython-parse",
        "summary": "Parse (absolute and relative) URLs."
    },
    {
        "name": "circuitpython-pca9674",
        "summary": null
    },
    {
        "name": "circuitpython-ps2controller",
        "summary": "CircuitPython library to read Sony PS2 game controllers"
    },
    {
        "name": "circuitpython-qmc5883l",
        "summary": "CircuitPython driver for the qmc5883l magnetometer"
    },
    {
        "name": "circuitpython-rm3100",
        "summary": "Driver for the RM3100 megnetometer by PNI Corp"
    },
    {
        "name": "circuitpython-rotary-slider",
        "summary": "Displayio Layout Rotary Slider Widget"
    },
    {
        "name": "circuitpython-rotaryselect",
        "summary": "A circular rotary selection widget"
    },
    {
        "name": "circuitpython-ruhrohrotaryio",
        "summary": "pretend to be 'rotaryio' for boards that need non-sequential pins"
    },
    {
        "name": "circuitpython-scales",
        "summary": "Graphic Scales to represent values in a scale in CircuitPython"
    },
    {
        "name": "circuitpython-schedule",
        "summary": "Reduced version of the schedule library for CircuitPython"
    },
    {
        "name": "circuitpython-seeed-xiao-nrf52840",
        "summary": "Provides access to onboard sensors and battet"
    },
    {
        "name": "circuitpython-seriallcd",
        "summary": "CircuitPython helper library for Parallax's serial LCDs"
    },
    {
        "name": "circuitpython-simnple-dial",
        "summary": "Simple dial widget"
    },
    {
        "name": "circuitpython-simple-gyro",
        "summary": "Displayio Gyro representation"
    },
    {
        "name": "circuitpython-slider",
        "summary": "CircuitPython slider Library"
    },
    {
        "name": "circuitpython-softkeyboard",
        "summary": "CircuitPython software defined keyboard for touch displays using displayio GridLayout."
    },
    {
        "name": "circuitpython-sparkfun-qwiicquadsolidstaterelay",
        "summary": "CircuitPython library for the Sparkfun Quad Solid State Qwiic Relay"
    },
    {
        "name": "circuitpython-stts22h",
        "summary": "CircuitPython Driver for the STTS22H Temperature Sensor"
    },
    {
        "name": "circuitpython-stubs",
        "summary": "PEP 561 type stubs for CircuitPython"
    },
    {
        "name": "circuitpython-styles",
        "summary": "Dynamic style helper for CircuitPython graphical elements"
    },
    {
        "name": "circuitpython-table",
        "summary": "CircuitPython Library to creat tables"
    },
    {
        "name": "circuitpython-ticstepper",
        "summary": "Driver for the TIC stepper motor drivers"
    },
    {
        "name": "circuitpython-tmidi",
        "summary": "MIDI library for CircuitPython"
    },
    {
        "name": "circuitpython-tmp117",
        "summary": "CircuitPython TMP117 Temperature Sensor Low Memory driver"
    },
    {
        "name": "circuitpython-tool",
        "summary": "Command-line tool for interfacing with CircuitPython devices."
    },
    {
        "name": "circuitpython-tzdb",
        "summary": "IANA timezones for adafruit_datetime"
    },
    {
        "name": "circuitpython-uboxplot",
        "summary": "calculates boxplot and creates its graphical representation"
    },
    {
        "name": "circuitpython-uhistogram",
        "summary": "CircuitPython library to calculate and graph histograms"
    },
    {
        "name": "circuitpython-unicornhathd",
        "summary": "CircuitPython framebuf based driver for Pimoroni's Unicorn HAT HD"
    },
    {
        "name": "circuitpython-uplot",
        "summary": "framework to display different plots in displayio. similar to widget"
    },
    {
        "name": "circuitpython-uschedule",
        "summary": "Reduced version of the schedule library for CircuitPython"
    },
    {
        "name": "circuitpython-waveshare-epd",
        "summary": "CircuitPython `displayio` drivers for Waveshare-based ePaper displays"
    },
    {
        "name": "circuitpython-waveshare-lcd1602",
        "summary": "Drive for Waveshare's I2C RGB character display LCD1602"
    },
    {
        "name": "circuitpython-wiichuck",
        "summary": "CircuitPython driver for Nintento WiiMote I2C Accessory Devices"
    },
    {
        "name": "cloudmanager-micropython-esp8266",
        "summary": "Cloudmanager esp8266 flash image"
    },
    {
        "name": "commedagh-circuitpython-pypi-version-testing",
        "summary": "testing pypi versioning"
    },
    {
        "name": "community-circuitpython-tca9555",
        "summary": "CircuitPython library for connecting a TCA9555 16-Bit I2C GPIO expander"
    },
    {
        "name": "creativecontrol-circuitpython-ltc166x",
        "summary": "CircuitPython library for control of LTC166X 8-bit and 10-bit DACs."
    },
    {
        "name": "ebyte-lora-e22-circuitpython",
        "summary": "CircuitPython LoRa EBYTE E22 device library complete and tested with Arduino SAMD, esp8266, esp32, Raspberry, rp2040 and STM32. sx1262/sx1268"
    },
    {
        "name": "ebyte-lora-e220-circuitpython",
        "summary": "LoRa EBYTE E220 device library complete and tested with Arduino, esp8266, esp32, STM32 and Raspberry Pi Pico. LLCC68"
    },
    {
        "name": "ebyte-lora-e32-circuitpython",
        "summary": "Ebyte E32 LoRa circuitpython library device very cheap and very long range (from 3Km to 8Km). Arduino LoRa EBYTE E32 device library complete and tested with Arduino, esp8266, esp32, STM32 and Raspberry Pi Pico. sx1278/sx1276."
    },
    {
        "name": "eiscp-micropython",
        "summary": "Micropython packages for the Onkyo EISCP protocol."
    },
    {
        "name": "esp32-micropython-i2cLCD",
        "summary": "uma biblioteca para utiliza\u00e7\u00e3o de um display i2c no esp32 micropython"
    },
    {
        "name": "foamyguy-circuitpython-another-version-test",
        "summary": "Testing version munging in cookiecutter"
    },
    {
        "name": "foamyguy-circuitpython-gradienthelper",
        "summary": "Tools for generating color gradient palettes and sha"
    },
    {
        "name": "foamyguy-circuitpython-nvm-helper",
        "summary": "Easy interface to store and retrieve objects persisted via NVM"
    },
    {
        "name": "foamyguy-circuitpython-version-testing",
        "summary": "Testing version munging PR"
    },
    {
        "name": "huas-micropython",
        "summary": "Micropython stub files and dependencies"
    },
    {
        "name": "hx711-micropython-impementation",
        "summary": "Based on SergeyPiskunov's implementation. More functionalities."
    },
    {
        "name": "jepler-circuitpython-udecimal",
        "summary": "Reduced version of the decimal library for CircuitPython"
    },
    {
        "name": "jupyter-micropython-remote",
        "summary": "Jupyter notebook kernel for remote execution on a Micropython system."
    },
    {
        "name": "jupyter-micropython-upydevice",
        "summary": "Jupyter kernel based on upydevice for operating MicroPython"
    },
    {
        "name": "jupyter_micropython_kernel",
        "summary": "Jupyter kernel to interact with a MicroPython ESP8266 or ESP32 over its serial REPL."
    },
    {
        "name": "lsm6ds3-micropython",
        "summary": "MicroPython device library for the LSM6DS3TR-C IMU"
    },
    {
        "name": "micropython-OTAUpdateManager",
        "summary": "Implementation of OTA for remote monitoring and controlling of IoT devices"
    },
    {
        "name": "micropython-Turtle",
        "summary": "A Turtle for micropython and add a little game"
    },
    {
        "name": "micropython-ZJB",
        "summary": "A test for ZJB"
    },
    {
        "name": "micropython-_ctypes",
        "summary": "Dummy ctypes module for MicroPython"
    },
    {
        "name": "micropython-_markupbase",
        "summary": "CPython _markupbase module ported to MicroPython"
    },
    {
        "name": "micropython-abc",
        "summary": "Dummy abc module for MicroPython"
    },
    {
        "name": "micropython-adt7410",
        "summary": "MicroPython Driver for the Analog Devices ADT7410 Temperature Sensor"
    },
    {
        "name": "micropython-adxl343",
        "summary": "MicroPython Driver for the Analog Devices ADXL343 Accelerometer"
    },
    {
        "name": "micropython-agps",
        "summary": "Assisted location services for MicroPython"
    },
    {
        "name": "micropython-ags02ma",
        "summary": "MicroPython Driver for the AGS02MA TVOC sensor"
    },
    {
        "name": "micropython-ahtx0",
        "summary": "MicroPython driver for the AHT10 and AHT20 temperature and humidity sensors."
    },
    {
        "name": "micropython-aifc",
        "summary": "Dummy aifc module for MicroPython"
    },
    {
        "name": "micropython-aiobutton",
        "summary": "A MicroPython module for asyncio button."
    },
    {
        "name": "micropython-am2320",
        "summary": "MicroPython library for the AM2320 temperature and humidity sensor."
    },
    {
        "name": "micropython-am7020",
        "summary": "AT Command library dedicated to am7020 http mqtt"
    },
    {
        "name": "micropython-appengine",
        "summary": "A MicroPython app engine."
    },
    {
        "name": "micropython-argparse",
        "summary": "argparse module for MicroPython"
    },
    {
        "name": "micropython-array",
        "summary": "Dummy array module for MicroPython"
    },
    {
        "name": "micropython-artecrobo2.0",
        "summary": "MicroPython library for ArtecRobo2.0"
    },
    {
        "name": "micropython-as6212",
        "summary": "MicroPython Library for the ASM AS6212 Temperature Sensor"
    },
    {
        "name": "micropython-ast",
        "summary": "Dummy ast module for MicroPython"
    },
    {
        "name": "micropython-async-websocket-client",
        "summary": "Asynchronous websocket client for ESP32 controller."
    },
    {
        "name": "micropython-asynchat",
        "summary": "Dummy asynchat module for MicroPython"
    },
    {
        "name": "micropython-asyncio",
        "summary": "Dummy asyncio module for MicroPython"
    },
    {
        "name": "micropython-asyncio_micro",
        "summary": "asyncio_micro module for MicroPython"
    },
    {
        "name": "micropython-asyncore",
        "summary": "Dummy asyncore module for MicroPython"
    },
    {
        "name": "micropython-atexit",
        "summary": "Dummy atexit module for MicroPython"
    },
    {
        "name": "micropython-audio-remote",
        "summary": "WiFi Audio Remote with MicroPython"
    },
    {
        "name": "micropython-audioop",
        "summary": "Dummy audioop module for MicroPython"
    },
    {
        "name": "micropython-base64",
        "summary": "CPython base64 module ported to MicroPython"
    },
    {
        "name": "micropython-basicdweet",
        "summary": "A python module for very basic APIs of the free dweet service."
    },
    {
        "name": "micropython-bdb",
        "summary": "Dummy bdb module for MicroPython"
    },
    {
        "name": "micropython-bech32",
        "summary": "Bech32 library for micropython"
    },
    {
        "name": "micropython-binascii",
        "summary": "PyPy binascii module ported to MicroPython"
    },
    {
        "name": "micropython-binhex",
        "summary": "Dummy binhex module for MicroPython"
    },
    {
        "name": "micropython-bisect",
        "summary": "CPython bisect module ported to MicroPython"
    },
    {
        "name": "micropython-bitstring",
        "summary": "Very stripped down version of Scott Griffith's Bitstring package."
    },
    {
        "name": "micropython-bma220",
        "summary": "MicroPython Driver for the Bosch BMA220 Accelerometer"
    },
    {
        "name": "micropython-bma400",
        "summary": "MicroPython Driver for the Bosch BMA400 Accelerometer"
    },
    {
        "name": "micropython-bme280",
        "summary": "bme280 module for MicroPython ESP8266/ESP32"
    },
    {
        "name": "micropython-bmi160",
        "summary": "MicroPython Driver for the Bosch BMI160 Acc/Gyro Sensor"
    },
    {
        "name": "micropython-bmi270",
        "summary": "MicroPython Driver for the Bosch BMI270 Accelerometer/Gyro Sensor"
    },
    {
        "name": "micropython-bmm150",
        "summary": "MicroPython Driver for the Bosch BMM150 Magnetometer"
    },
    {
        "name": "micropython-bmp581",
        "summary": "MicroPython Driver for the Bosch BMP581 pressure sensor"
    },
    {
        "name": "micropython-bootconfig",
        "summary": "Service to allow configuring a micropython board"
    },
    {
        "name": "micropython-bootstrap",
        "summary": "Simplified way to build and deploy apps to IoT devices that use micropython"
    },
    {
        "name": "micropython-brainelectronics-helpers",
        "summary": "MicroPython brainelectronics helpers library"
    },
    {
        "name": "micropython-btree",
        "summary": "Dummy btree module for MicroPython"
    },
    {
        "name": "micropython-btreedb",
        "summary": "Very simple ORM (Object-Relational Mapper) for MicroPython's 'btree' module.\n"
    },
    {
        "name": "micropython-buzzer",
        "summary": "Buzzer implemetion for MicroPython"
    },
    {
        "name": "micropython-bz2",
        "summary": "Dummy bz2 module for MicroPython"
    },
    {
        "name": "micropython-cProfile",
        "summary": "Dummy cProfile module for MicroPython"
    },
    {
        "name": "micropython-calendar",
        "summary": "Dummy calendar module for MicroPython"
    },
    {
        "name": "micropython-captive-dhcp-server",
        "summary": "Micropython asyncio simplistic dhcp server for use with captive portals"
    },
    {
        "name": "micropython-captive-dns-server",
        "summary": "Micropython asyncio simplistic dns server for use with captive portals"
    },
    {
        "name": "micropython-ccrighton-phew",
        "summary": "A small webserver and templating library specifically designed for MicroPython on the Pico W."
    },
    {
        "name": "micropython-cgi",
        "summary": "CPython cgi module ported to MicroPython"
    },
    {
        "name": "micropython-cgitb",
        "summary": "Dummy cgitb module for MicroPython"
    },
    {
        "name": "micropython-chunk",
        "summary": "Dummy chunk module for MicroPython"
    },
    {
        "name": "micropython-cloudmanager",
        "summary": "Micropython client that allows network attached boards to be controlled from a central redis server"
    },
    {
        "name": "micropython-cmath",
        "summary": "Dummy cmath module for MicroPython"
    },
    {
        "name": "micropython-cmd",
        "summary": "CPython cmd module ported to MicroPython"
    },
    {
        "name": "micropython-code",
        "summary": "Dummy code module for MicroPython"
    },
    {
        "name": "micropython-codecs",
        "summary": "Dummy codecs module for MicroPython"
    },
    {
        "name": "micropython-codeop",
        "summary": "Dummy codeop module for MicroPython"
    },
    {
        "name": "micropython-collections",
        "summary": "collections module for MicroPython"
    },
    {
        "name": "micropython-collections.abc",
        "summary": "Dummy collections.abc module for MicroPython"
    },
    {
        "name": "micropython-collections.defaultdict",
        "summary": "collections.defaultdict module for MicroPython"
    },
    {
        "name": "micropython-collections.deque",
        "summary": "collections.deque module for MicroPython"
    },
    {
        "name": "micropython-colorsys",
        "summary": "Dummy colorsys module for MicroPython"
    },
    {
        "name": "micropython-compileall",
        "summary": "Dummy compileall module for MicroPython"
    },
    {
        "name": "micropython-concurrent.futures",
        "summary": "Dummy concurrent.futures module for MicroPython"
    },
    {
        "name": "micropython-configparser",
        "summary": "Dummy configparser module for MicroPython"
    },
    {
        "name": "micropython-consentiumthings",
        "summary": "A micropython package for IoT"
    },
    {
        "name": "micropython-contextlib",
        "summary": "CPython contextlib module ported to MicroPython"
    },
    {
        "name": "micropython-contextvars",
        "summary": "Dummy contextvars module for MicroPython"
    },
    {
        "name": "micropython-copy",
        "summary": "CPython copy module ported to MicroPython"
    },
    {
        "name": "micropython-copyreg",
        "summary": "Dummy copyreg module for MicroPython"
    },
    {
        "name": "micropython-cozir",
        "summary": "COZIR CO2 Sensor Library"
    },
    {
        "name": "micropython-cpython-array",
        "summary": "MicroPython module array ported to CPython"
    },
    {
        "name": "micropython-cpython-btree",
        "summary": "MicroPython module btree ported to CPython"
    },
    {
        "name": "micropython-cpython-builtins",
        "summary": "MicroPython module builtins ported to CPython"
    },
    {
        "name": "micropython-cpython-ffi",
        "summary": "MicroPython module ffi ported to CPython"
    },
    {
        "name": "micropython-cpython-framebuf",
        "summary": "MicroPython module framebuf ported to CPython"
    },
    {
        "name": "micropython-cpython-gc",
        "summary": "MicroPython module gc ported to CPython"
    },
    {
        "name": "micropython-cpython-machine",
        "summary": "MicroPython module machine ported to CPython"
    },
    {
        "name": "micropython-cpython-micropython",
        "summary": "MicroPython module micropython ported to CPython"
    },
    {
        "name": "micropython-cpython-network",
        "summary": "MicroPython module network ported to CPython"
    },
    {
        "name": "micropython-cpython-sys",
        "summary": "MicroPython module sys ported to CPython"
    },
    {
        "name": "micropython-cpython-uasyncio",
        "summary": "MicroPython module uasyncio ported to CPython"
    },
    {
        "name": "micropython-cpython-ubinascii",
        "summary": "MicroPython module ubinascii ported to CPython"
    },
    {
        "name": "micropython-cpython-ucollections",
        "summary": "MicroPython module ucollections ported to CPython"
    },
    {
        "name": "micropython-cpython-ucryptolib",
        "summary": "MicroPython module ucryptolib ported to CPython"
    },
    {
        "name": "micropython-cpython-uctypes",
        "summary": "MicroPython module uctypes ported to CPython"
    },
    {
        "name": "micropython-cpython-uerrno",
        "summary": "MicroPython module uerrno ported to CPython"
    },
    {
        "name": "micropython-cpython-uhashlib",
        "summary": "MicroPython module uhashlib ported to CPython"
    },
    {
        "name": "micropython-cpython-uheapq",
        "summary": "MicroPython module uheapq ported to CPython"
    },
    {
        "name": "micropython-cpython-uio",
        "summary": "MicroPython module uio ported to CPython"
    },
    {
        "name": "micropython-cpython-ujson",
        "summary": "MicroPython module ujson ported to CPython"
    },
    {
        "name": "micropython-cpython-ulogging",
        "summary": "MicroPython module ulogging ported to CPython"
    },
    {
        "name": "micropython-cpython-uos",
        "summary": "MicroPython module uos ported to CPython"
    },
    {
        "name": "micropython-cpython-upip",
        "summary": "MicroPython module upip ported to CPython"
    },
    {
        "name": "micropython-cpython-ure",
        "summary": "MicroPython module ure ported to CPython"
    },
    {
        "name": "micropython-cpython-uselect",
        "summary": "MicroPython module uselect ported to CPython"
    },
    {
        "name": "micropython-cpython-usocket",
        "summary": "MicroPython module usocket ported to CPython"
    },
    {
        "name": "micropython-cpython-ussl",
        "summary": "MicroPython module ussl ported to CPython"
    },
    {
        "name": "micropython-cpython-ustruct",
        "summary": "MicroPython module ustruct ported to CPython"
    },
    {
        "name": "micropython-cpython-utarfile",
        "summary": "MicroPython module utarfile ported to CPython"
    },
    {
        "name": "micropython-cpython-utime",
        "summary": "MicroPython module utime ported to CPython"
    },
    {
        "name": "micropython-cpython-utimeq",
        "summary": "MicroPython module utimeq ported to CPython"
    },
    {
        "name": "micropython-cpython-uzlib",
        "summary": "MicroPython module uzlib ported to CPython"
    },
    {
        "name": "micropython-crypt",
        "summary": "Dummy crypt module for MicroPython"
    },
    {
        "name": "micropython-cryptocfb",
        "summary": "A Python module to encrypt and decrypt data with AES-128 CFB mode."
    },
    {
        "name": "micropython-cryptodweet",
        "summary": "A python module for very basic APIs of the free dweet service with encryption."
    },
    {
        "name": "micropython-cryptomsg",
        "summary": "A MicroPython module to encrypt and decrypt messages with AES CBC mode."
    },
    {
        "name": "micropython-csv",
        "summary": "Dummy csv module for MicroPython"
    },
    {
        "name": "micropython-curses",
        "summary": "Dummy curses module for MicroPython"
    },
    {
        "name": "micropython-curses.ascii",
        "summary": "CPython curses.ascii module ported to MicroPython"
    },
    {
        "name": "micropython-dataclasses",
        "summary": "Dummy dataclasses module for MicroPython"
    },
    {
        "name": "micropython-datetime",
        "summary": "Dummy datetime module for MicroPython"
    },
    {
        "name": "micropython-dbm",
        "summary": "Dummy dbm module for MicroPython"
    },
    {
        "name": "micropython-dcompy",
        "summary": "dcom micropython package"
    },
    {
        "name": "micropython-decimal",
        "summary": "Dummy decimal module for MicroPython"
    },
    {
        "name": "micropython-dfplayer",
        "summary": "Library to use the DFPlayer mini mp3 player module with micropython"
    },
    {
        "name": "micropython-dftds",
        "summary": "MicroPython library for the TDS meter sensor"
    },
    {
        "name": "micropython-dgus",
        "summary": "DGUS library for micropython"
    },
    {
        "name": "micropython-dht12",
        "summary": "MicroPython library for the DHT12 temperature and humidity sensor."
    },
    {
        "name": "micropython-difflib",
        "summary": "Dummy difflib module for MicroPython"
    },
    {
        "name": "micropython-dis",
        "summary": "Dummy dis module for MicroPython"
    },
    {
        "name": "micropython-display",
        "summary": "Micropython scripts for use displays."
    },
    {
        "name": "micropython-doctest",
        "summary": "Dummy doctest module for MicroPython"
    },
    {
        "name": "micropython-dps310",
        "summary": "MicroPython Driver for the DPS310 sensor"
    },
    {
        "name": "micropython-ds1307",
        "summary": "MicroPython driver for DS1307 RTC"
    },
    {
        "name": "micropython-ds1631",
        "summary": "MicroPython i2c driver for Maxim-Dallas DS1621 DS1631 DS1631A DS1721 DS1731 digital thermometer and thermostat."
    },
    {
        "name": "micropython-ds1841",
        "summary": "MicroPython Driver for the DS1841 Potentiometer"
    },
    {
        "name": "micropython-ds3502",
        "summary": "MicroPython Driver for the DS3502 Potentiometer"
    },
    {
        "name": "micropython-dummy_threading",
        "summary": "Dummy dummy_threading module for MicroPython"
    },
    {
        "name": "micropython-dweeter",
        "summary": "A python module for messaging through the free dweet service."
    },
    {
        "name": "micropython-eduponics",
        "summary": "STEMinds Eduponics Mini MicroPython library"
    },
    {
        "name": "micropython-eeprom",
        "summary": "MicroPython driver for AT24Cxx EEPROM"
    },
    {
        "name": "micropython-eliza",
        "summary": "ELIZA chatbot for MicroPython. Based on 'ELIZA' by Joseph Weizenbaum, 1966."
    },
    {
        "name": "micropython-email.charset",
        "summary": "CPython email.charset module ported to MicroPython"
    },
    {
        "name": "micropython-email.encoders",
        "summary": "CPython email.encoders module ported to MicroPython"
    },
    {
        "name": "micropython-email.errors",
        "summary": "CPython email.errors module ported to MicroPython"
    },
    {
        "name": "micropython-email.feedparser",
        "summary": "CPython email.feedparser module ported to MicroPython"
    },
    {
        "name": "micropython-email.header",
        "summary": "CPython email.header module ported to MicroPython"
    },
    {
        "name": "micropython-email.internal",
        "summary": "CPython email.internal module ported to MicroPython"
    },
    {
        "name": "micropython-email.message",
        "summary": "CPython email.message module ported to MicroPython"
    },
    {
        "name": "micropython-email.parser",
        "summary": "CPython email.parser module ported to MicroPython"
    },
    {
        "name": "micropython-email.utils",
        "summary": "CPython email.utils module ported to MicroPython"
    },
    {
        "name": "micropython-ensurepip",
        "summary": "Dummy ensurepip module for MicroPython"
    },
    {
        "name": "micropython-enum",
        "summary": "Dummy enum module for MicroPython"
    },
    {
        "name": "micropython-env-sense",
        "summary": "Importers for various institutions for Beancount"
    },
    {
        "name": "micropython-errno",
        "summary": "errno module for MicroPython"
    },
    {
        "name": "micropython-esp-wifi-manager",
        "summary": "MicroPython WiFi Manager to configure and connect to networks"
    },
    {
        "name": "micropython-esp32-esp32_generic-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-esp32_generic_c3-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-esp32_generic_s3-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-generic_ota-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-generic_s3-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-generic_spiram-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-ota-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-s3-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp32-ulp",
        "summary": "Assembler toolchain for the ESP32 ULP co-processor, written in MicroPython"
    },
    {
        "name": "micropython-esp32-um_tinypico-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp8266-esp8266_generic-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-esp8266-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-espFOTA",
        "summary": "\"espFOTA: An OTA (Over-the-Air) update library for ESP8266, ESP32, and other devices supporting MicroPython."
    },
    {
        "name": "micropython-espresso",
        "summary": "Micropython scripts for Espresso IDE."
    },
    {
        "name": "micropython-europi",
        "summary": "EuroPi module for MicroPython"
    },
    {
        "name": "micropython-europi-contrib",
        "summary": "Community Contributions to EuroPi module for MicroPython"
    },
    {
        "name": "micropython-event-bus",
        "summary": "Micropython compatible producer/subscriber event bus system with optional threading."
    },
    {
        "name": "micropython-eydam-prototyping-config",
        "summary": "Some wifi functions for MicroPython"
    },
    {
        "name": "micropython-eydam-prototyping-ep-http",
        "summary": "Some wifi functions for MicroPython"
    },
    {
        "name": "micropython-eydam-prototyping-lcd-menu",
        "summary": "Some LCD Menu functionality for Micropython"
    },
    {
        "name": "micropython-eydam-prototyping-logging",
        "summary": "Some logging functions for MicroPython in combination with syslog-server"
    },
    {
        "name": "micropython-eydam-prototyping-statemachine",
        "summary": "Some statemachine functions for MicroPython"
    },
    {
        "name": "micropython-eydam-prototyping-wifi",
        "summary": "Some wifi functions for MicroPython"
    },
    {
        "name": "micropython-faulthandler",
        "summary": "Dummy faulthandler module for MicroPython"
    },
    {
        "name": "micropython-fcntl",
        "summary": "fcntl module for MicroPython"
    },
    {
        "name": "micropython-ffilib",
        "summary": "MicroPython FFI helper module"
    },
    {
        "name": "micropython-filecmp",
        "summary": "Dummy filecmp module for MicroPython"
    },
    {
        "name": "micropython-filedb",
        "summary": "Very simple, filesystem-based ORM (Object-Relational\nMapper) for MicroPython."
    },
    {
        "name": "micropython-fileinput",
        "summary": "Dummy fileinput module for MicroPython"
    },
    {
        "name": "micropython-firebase-auth",
        "summary": "Firebase Auth implementation for Micropython optimized for ESP32."
    },
    {
        "name": "micropython-firebase-firestore",
        "summary": "Firebase Firestore implementation for Micropython optimized for ESP32."
    },
    {
        "name": "micropython-firebase-realtime",
        "summary": "Firebase realtime implementation for Micropython"
    },
    {
        "name": "micropython-fnmatch",
        "summary": "CPython fnmatch module ported to MicroPython"
    },
    {
        "name": "micropython-formatter",
        "summary": "Dummy formatter module for MicroPython"
    },
    {
        "name": "micropython-fractions",
        "summary": "Dummy fractions module for MicroPython"
    },
    {
        "name": "micropython-framebuf",
        "summary": "Implementation of \"framebuf\" module (using SDL2) for the \"unix\" port of MicroPython. (Experimental)"
    },
    {
        "name": "micropython-ft6x36",
        "summary": "Driver for the FT6x36"
    },
    {
        "name": "micropython-ftplib",
        "summary": "Dummy ftplib module for MicroPython"
    },
    {
        "name": "micropython-functools",
        "summary": "functools module for MicroPython"
    },
    {
        "name": "micropython-future",
        "summary": "Dummy __future__ module for MicroPython"
    },
    {
        "name": "micropython-gc",
        "summary": "Dummy gc module for MicroPython"
    },
    {
        "name": "micropython-genpy",
        "summary": "A package done in order to generate ros message classes."
    },
    {
        "name": "micropython-getopt",
        "summary": "CPython getopt module ported to MicroPython"
    },
    {
        "name": "micropython-getpass",
        "summary": "Dummy getpass module for MicroPython"
    },
    {
        "name": "micropython-gettext",
        "summary": "gettext module for MicroPython"
    },
    {
        "name": "micropython-glob",
        "summary": "CPython glob module ported to MicroPython"
    },
    {
        "name": "micropython-gnssl76l",
        "summary": "MicroPython I2C driver for the Quectel GNSS L76-L (GPS) receiver"
    },
    {
        "name": "micropython-googlesheet",
        "summary": "Update or append the data to Google Sheet, or get the data on Google Sheet. by using HTTP to execute the Google Apps Script API compatible with ESP32."
    },
    {
        "name": "micropython-grp",
        "summary": "Dummy grp module for MicroPython"
    },
    {
        "name": "micropython-gzip",
        "summary": "gzip module for MicroPython"
    },
    {
        "name": "micropython-h3lis200dl",
        "summary": "Micropython Driver for the ST H3LIS200DL Accelerometer"
    },
    {
        "name": "micropython-hashlib",
        "summary": "PyPy hashlib module ported to MicroPython"
    },
    {
        "name": "micropython-hashlib-safe",
        "summary": "PyPy hashlib module ported to MicroPython"
    },
    {
        "name": "micropython-hashlib15",
        "summary": "PyPy hashlib module ported to MicroPython"
    },
    {
        "name": "micropython-hashlib3",
        "summary": "PyPy hashlib module ported to MicroPython"
    },
    {
        "name": "micropython-hashlib5",
        "summary": "PyPy hashlib module ported to MicroPython"
    },
    {
        "name": "micropython-hashlib9",
        "summary": "PyPy hashlib module ported to MicroPython"
    },
    {
        "name": "micropython-hdc1080",
        "summary": "MicroPython driver for the TI HDC1080 Temperature and Humidity sensor"
    },
    {
        "name": "micropython-heapq",
        "summary": "CPython heapq module ported to MicroPython"
    },
    {
        "name": "micropython-hellojdh99",
        "summary": "test micropython pack"
    },
    {
        "name": "micropython-hints",
        "summary": "MicroPython type hints"
    },
    {
        "name": "micropython-hmac",
        "summary": "CPython hmac module ported to MicroPython"
    },
    {
        "name": "micropython-home-assistant",
        "summary": "Home Assistant MQTT integration for MicroPython"
    },
    {
        "name": "micropython-hs3003",
        "summary": "MicroPython Driver for the Renesas HS3003 Temperature and Humidity Sensor"
    },
    {
        "name": "micropython-html",
        "summary": "CPython html module ported to MicroPython"
    },
    {
        "name": "micropython-html.entities",
        "summary": "CPython html.entities module ported to MicroPython"
    },
    {
        "name": "micropython-html.parser",
        "summary": "CPython html.parser module ported to MicroPython"
    },
    {
        "name": "micropython-hts221",
        "summary": "MicroPython Driver for the HTS221 Humidity Sensor"
    },
    {
        "name": "micropython-http.client",
        "summary": "CPython http.client module ported to MicroPython"
    },
    {
        "name": "micropython-http.cookiejar",
        "summary": "Dummy http.cookiejar module for MicroPython"
    },
    {
        "name": "micropython-http.cookies",
        "summary": "Dummy http.cookies module for MicroPython"
    },
    {
        "name": "micropython-httpota",
        "summary": "MicroPython library for OTA updates using HTTP"
    },
    {
        "name": "micropython-htu21df",
        "summary": "MicroPython HTU21D-F Temperature & Humidity"
    },
    {
        "name": "micropython-htu31d",
        "summary": "MicroPython library for TE HTU31D temperature and humidity sensors"
    },
    {
        "name": "micropython-hx711",
        "summary": "Micropython driver for the HX711"
    },
    {
        "name": "micropython-i2c-lcd",
        "summary": "MicroPython package to control HD44780 LCD displays 1602 and 2004"
    },
    {
        "name": "micropython-icg20660",
        "summary": "MicroPython Driver for the TDK ICG20660 Accelerometer/Gyro sensor"
    },
    {
        "name": "micropython-icm20948",
        "summary": "MicroPython Driver for the Accelerometer and Gyro ICM20948 Sensor"
    },
    {
        "name": "micropython-icp10111",
        "summary": "MicroPython Driver for the TDK Barometric Pressure"
    },
    {
        "name": "micropython-ili934x",
        "summary": "MicroPython SPI driver for ILI934X based displays"
    },
    {
        "name": "micropython-imaplib",
        "summary": "Dummy imaplib module for MicroPython"
    },
    {
        "name": "micropython-imghdr",
        "summary": "Dummy imghdr module for MicroPython"
    },
    {
        "name": "micropython-imp",
        "summary": "Dummy imp module for MicroPython"
    },
    {
        "name": "micropython-importlib",
        "summary": "Dummy importlib module for MicroPython"
    },
    {
        "name": "micropython-importlib.resources",
        "summary": "Dummy importlib.resources module for MicroPython"
    },
    {
        "name": "micropython-inspect",
        "summary": "inspect module for MicroPython"
    },
    {
        "name": "micropython-io",
        "summary": "Dummy io module for MicroPython"
    },
    {
        "name": "micropython-iot",
        "summary": "Micropython IoT libraries and tools"
    },
    {
        "name": "micropython-iot-utils",
        "summary": "micropython-iot-utils"
    },
    {
        "name": "micropython-iotPervasiveServiceSDK",
        "summary": "\u8bbe\u5907\u7aef\u76f4\u8fde\u6846\u67b6python"
    },
    {
        "name": "micropython-iotc",
        "summary": "Azure IoT Central client for MicroPython (mqtt protocol)"
    },
    {
        "name": "micropython-ipaddress",
        "summary": "Dummy ipaddress module for MicroPython"
    },
    {
        "name": "micropython-isl29125",
        "summary": "MicroPython Driver for the Intersil ISL29125 Color Sensor"
    },
    {
        "name": "micropython-itertools",
        "summary": "itertools module for MicroPython"
    },
    {
        "name": "micropython-json",
        "summary": "CPython json module ported to MicroPython"
    },
    {
        "name": "micropython-keypad",
        "summary": "Keypad library generic matrix keypads"
    },
    {
        "name": "micropython-keyword",
        "summary": "CPython keyword module ported to MicroPython"
    },
    {
        "name": "micropython-kx132",
        "summary": "MicroPython Driver for the Kionix KX132 Accelerometer"
    },
    {
        "name": "micropython-lagan",
        "summary": "log system"
    },
    {
        "name": "micropython-lcd",
        "summary": "Dummy lcd module for MicroPython"
    },
    {
        "name": "micropython-lib2to3",
        "summary": "Dummy lib2to3 module for MicroPython"
    },
    {
        "name": "micropython-libc",
        "summary": "MicroPython FFI helper module (deprecated)"
    },
    {
        "name": "micropython-linecache",
        "summary": "Dummy linecache module for MicroPython"
    },
    {
        "name": "micropython-linenotify",
        "summary": "Line Notify with MicroPython on ESP32/ESP8266"
    },
    {
        "name": "micropython-lis2hh12",
        "summary": "MicroPython I2C driver for LIS2HH12 3-axis accelerometer"
    },
    {
        "name": "micropython-lis2mdl",
        "summary": "MicroPython Driver for the ST LIS2MDL Magnetometer sensor"
    },
    {
        "name": "micropython-lis3dh",
        "summary": "LIS3DH MicroPython Driver"
    },
    {
        "name": "micropython-lis3mdl",
        "summary": "MicroPython Driver for the ST LIS3MDL magnetometer"
    },
    {
        "name": "micropython-ljus",
        "summary": "A MicroPython package for LEDs."
    },
    {
        "name": "micropython-lnurl",
        "summary": "LNURL library for micropython"
    },
    {
        "name": "micropython-locale",
        "summary": "Dummy locale module for MicroPython"
    },
    {
        "name": "micropython-logging",
        "summary": "logging module for MicroPython"
    },
    {
        "name": "micropython-loki",
        "summary": "Micropython library for sending logs to Loki"
    },
    {
        "name": "micropython-lsm6dsox",
        "summary": "MicroPython Library for the ST LSM6DSOX accelerometer/gyro Sensor"
    },
    {
        "name": "micropython-lzma",
        "summary": "Dummy lzma module for MicroPython"
    },
    {
        "name": "micropython-machine",
        "summary": "machine module for MicroPython"
    },
    {
        "name": "micropython-magic",
        "summary": "MicroPython Magic commands for use with Jupyter notebooks and Jupyter Labs"
    },
    {
        "name": "micropython-mailbox",
        "summary": "Dummy mailbox module for MicroPython"
    },
    {
        "name": "micropython-mailcap",
        "summary": "Dummy mailcap module for MicroPython"
    },
    {
        "name": "micropython-makerpack",
        "summary": "Package for maker kit and every other makers."
    },
    {
        "name": "micropython-marshal",
        "summary": "Dummy marshal module for MicroPython"
    },
    {
        "name": "micropython-math",
        "summary": "Dummy math module for MicroPython"
    },
    {
        "name": "micropython-max30102",
        "summary": "MAX30102 driver for micropython."
    },
    {
        "name": "micropython-max7219",
        "summary": "A MicroPython library for the Max7219 8x8 LED matrix driver"
    },
    {
        "name": "micropython-mc3479",
        "summary": "MicroPython Driver for the MC3479 Accelerometer"
    },
    {
        "name": "micropython-mcp9808",
        "summary": "MicroPython Driver for the Microchip MCP9808 Temperature Sensor"
    },
    {
        "name": "micropython-mcron",
        "summary": "MicroCRON for MicroPython."
    },
    {
        "name": "micropython-md5",
        "summary": "Dummy md5 module for MicroPython"
    },
    {
        "name": "micropython-mdns",
        "summary": "MDNS for micropython with service discovery support"
    },
    {
        "name": "micropython-mesmerize",
        "summary": "mesmerize module for MicroPython"
    },
    {
        "name": "micropython-microbmp",
        "summary": "A small Python module for BMP image processing."
    },
    {
        "name": "micropython-micronet",
        "summary": "MicroPython library for networking"
    },
    {
        "name": "micropython-microqueue",
        "summary": "Simple redis queue for MicroPython"
    },
    {
        "name": "micropython-mimetypes",
        "summary": "Dummy mimetypes module for MicroPython"
    },
    {
        "name": "micropython-mlx90393",
        "summary": "MicroPython Driver for the MLX90393 Sensor"
    },
    {
        "name": "micropython-mlx90614",
        "summary": "MicroPython library for the MLX90614 IR temperature sensor."
    },
    {
        "name": "micropython-mlx90615",
        "summary": "Micropython scripts for use MLX90615 temperatures sensors."
    },
    {
        "name": "micropython-mma8451",
        "summary": "MicroPython module for the MMA8451 3 axis accelerometer"
    },
    {
        "name": "micropython-mma8452q",
        "summary": "MicroPython Drtiver for the NXP MMA8452Q Accelerometer"
    },
    {
        "name": "micropython-mmap",
        "summary": "Dummy mmap module for MicroPython"
    },
    {
        "name": "micropython-mmc5603",
        "summary": "MicroPython driver for the Memsic MMC5603 Magnetometer"
    },
    {
        "name": "micropython-mmc5983",
        "summary": "MicroPython Library for the Memsic MMC5983 Magnetometer"
    },
    {
        "name": "micropython-mmr902",
        "summary": "MicroPython Driver fro the Mitsumi MMR902 Micro Pressure Sensor"
    },
    {
        "name": "micropython-modbus",
        "summary": "MicroPython ModBus TCP and RTU library supporting client and host mode"
    },
    {
        "name": "micropython-modulefinder",
        "summary": "Dummy modulefinder module for MicroPython"
    },
    {
        "name": "micropython-mojogzip",
        "summary": "gzip module for MicroPython"
    },
    {
        "name": "micropython-motor",
        "summary": "MicroPython Helpers for controlling PWM based motors and servos"
    },
    {
        "name": "micropython-mpl3115a2",
        "summary": "MicroPython driver for the NXP MPL3115A2 Pressure and Temperature sensor"
    },
    {
        "name": "micropython-mpu6886",
        "summary": "MicroPython I2C driver for MPU6886 6-axis motion tracking device"
    },
    {
        "name": "micropython-mpu9250",
        "summary": "MicroPython I2C driver for MPU9250 9-axis motion tracking device"
    },
    {
        "name": "micropython-mpy-env",
        "summary": "Simple environment variable loader for MicroPython board."
    },
    {
        "name": "micropython-mpylib",
        "summary": "Module to deal with MicroPython compiled bytecode files (.mpy)"
    },
    {
        "name": "micropython-mqtt",
        "summary": "Reliable MQTT client for MicroPython using asyncio"
    },
    {
        "name": "micropython-mqtt-async",
        "summary": "Reliable MQTT client for MicroPython using asyncio"
    },
    {
        "name": "micropython-mqttse",
        "summary": "Lightweight mqttse library for MicroPython, nonblocking Mqtt for ESP8266."
    },
    {
        "name": "micropython-ms5611",
        "summary": "MicroPython Driver for the TE MS5611 Pressure and Temperature Sensor"
    },
    {
        "name": "micropython-msilib",
        "summary": "Dummy msilib module for MicroPython"
    },
    {
        "name": "micropython-mtx",
        "summary": "Extra-fast Matrix Multiplication and Linear System Solver on MicroPython"
    },
    {
        "name": "micropython-multiprocessing",
        "summary": "multiprocessing module for MicroPython"
    },
    {
        "name": "micropython-ndefcdf",
        "summary": "NDEF Crypto Data Format"
    },
    {
        "name": "micropython-ndeflib",
        "summary": "NDEF library for MicroPython based on NDEF library"
    },
    {
        "name": "micropython-netpie",
        "summary": "MicroPython Library for Interfacing with the NETPIE IoT Platform"
    },
    {
        "name": "micropython-netrc",
        "summary": "Dummy netrc module for MicroPython"
    },
    {
        "name": "micropython-nextion",
        "summary": "MicroPython Nextion serial displays library"
    },
    {
        "name": "micropython-nis",
        "summary": "Dummy nis module for MicroPython"
    },
    {
        "name": "micropython-nntplib",
        "summary": "Dummy nntplib module for MicroPython"
    },
    {
        "name": "micropython-nodewire",
        "summary": "NodeWire"
    },
    {
        "name": "micropython-numbers",
        "summary": "Dummy numbers module for MicroPython"
    },
    {
        "name": "micropython-octopuslab-installer",
        "summary": "OctopusLab installer for MicroPython"
    },
    {
        "name": "micropython-oled",
        "summary": "Micropython scripts for use OLED displays."
    },
    {
        "name": "micropython-opcode",
        "summary": "opcode module for MicroPython"
    },
    {
        "name": "micropython-operator",
        "summary": "operator module for MicroPython"
    },
    {
        "name": "micropython-optparse",
        "summary": "Dummy optparse module for MicroPython"
    },
    {
        "name": "micropython-os",
        "summary": "os module for MicroPython"
    },
    {
        "name": "micropython-os.path",
        "summary": "os.path module for MicroPython"
    },
    {
        "name": "micropython-ossaudiodev",
        "summary": "Dummy ossaudiodev module for MicroPython"
    },
    {
        "name": "micropython-ota",
        "summary": "Micropython library for upgrading code over-the-air (OTA)"
    },
    {
        "name": "micropython-p9813",
        "summary": "MicroPython library for the P9813 RGB LED driver."
    },
    {
        "name": "micropython-package-template",
        "summary": "MicroPython PyPi package template project with auto deploy"
    },
    {
        "name": "micropython-parser",
        "summary": "Dummy parser module for MicroPython"
    },
    {
        "name": "micropython-pathlib",
        "summary": "Dummy pathlib module for MicroPython"
    },
    {
        "name": "micropython-pathlib-full",
        "summary": "Micropython port of pathlib"
    },
    {
        "name": "micropython-pca9685",
        "summary": "MicroPython Driver for the PCA9685"
    },
    {
        "name": "micropython-pcd8544",
        "summary": "MicroPython library for the PCD8544 LCD, used by Nokia 5110 displays."
    },
    {
        "name": "micropython-pcf8591",
        "summary": "A pcf8591 driver for micropython"
    },
    {
        "name": "micropython-pct2075",
        "summary": "MciroPython Driver for the NXP Semiconductors Temperature Sensor"
    },
    {
        "name": "micropython-pdb",
        "summary": "Dummy pdb module for MicroPython"
    },
    {
        "name": "micropython-phew",
        "summary": "A small webserver and templating library specifically designed for MicroPython on the Pico W."
    },
    {
        "name": "micropython-pickle",
        "summary": "Dummy pickle module for MicroPython"
    },
    {
        "name": "micropython-pickletools",
        "summary": "Dummy pickletools module for MicroPython"
    },
    {
        "name": "micropython-picoconnection",
        "summary": "Pi Pico AP and Wifi Connection helper"
    },
    {
        "name": "micropython-picowebrouter",
        "summary": "Pi Pico webserver"
    },
    {
        "name": "micropython-pipes",
        "summary": "Dummy pipes module for MicroPython"
    },
    {
        "name": "micropython-pkg_resources",
        "summary": "pkg_resources module for MicroPython"
    },
    {
        "name": "micropython-pkgutil",
        "summary": "pkgutil module for MicroPython"
    },
    {
        "name": "micropython-platform",
        "summary": "Dummy platform module for MicroPython"
    },
    {
        "name": "micropython-plc",
        "summary": "PLC library for micropython"
    },
    {
        "name": "micropython-plistlib",
        "summary": "Dummy plistlib module for MicroPython"
    },
    {
        "name": "micropython-poplib",
        "summary": "Dummy poplib module for MicroPython"
    },
    {
        "name": "micropython-posix",
        "summary": "Dummy posix module for MicroPython"
    },
    {
        "name": "micropython-posixpath",
        "summary": "Dummy posixpath module for MicroPython"
    },
    {
        "name": "micropython-ppm-reader",
        "summary": "Decodes PPM signals from RC receivers"
    },
    {
        "name": "micropython-pprint",
        "summary": "Dummy pprint module for MicroPython"
    },
    {
        "name": "micropython-profile",
        "summary": "Dummy profile module for MicroPython"
    },
    {
        "name": "micropython-pstats",
        "summary": "Dummy pstats module for MicroPython"
    },
    {
        "name": "micropython-pty",
        "summary": "Dummy pty module for MicroPython"
    },
    {
        "name": "micropython-pwd",
        "summary": "pwd module for MicroPython"
    },
    {
        "name": "micropython-py-esp32-ulp",
        "summary": "Assembler toolchain for the ESP32 ULP co-processor, written in MicroPython"
    },
    {
        "name": "micropython-py_compile",
        "summary": "py_compile module for MicroPython"
    },
    {
        "name": "micropython-pycayennelpp",
        "summary": "Encoder and Decoder for CayenneLLP"
    },
    {
        "name": "micropython-pyclbr",
        "summary": "Dummy pyclbr module for MicroPython"
    },
    {
        "name": "micropython-pystone",
        "summary": "CPython pystone module ported to MicroPython"
    },
    {
        "name": "micropython-pystone_lowmem",
        "summary": "CPython pystone_lowmem module ported to MicroPython"
    },
    {
        "name": "micropython-pystubit2",
        "summary": "MicroPython library for StuduinoBit&ArtecRobo2.0"
    },
    {
        "name": "micropython-qmc5883l",
        "summary": "MicroPython Driver for the QMC5883L Accelerometer"
    },
    {
        "name": "micropython-qr",
        "summary": "Uploaded micro python qrcode library"
    },
    {
        "name": "micropython-queue",
        "summary": "Dummy queue module for MicroPython"
    },
    {
        "name": "micropython-quopri",
        "summary": "CPython quopri module ported to MicroPython"
    },
    {
        "name": "micropython-random",
        "summary": "Dummy random module for MicroPython"
    },
    {
        "name": "micropython-re",
        "summary": "Dummy re module for MicroPython"
    },
    {
        "name": "micropython-re-pcre",
        "summary": "re-pcre module for MicroPython"
    },
    {
        "name": "micropython-readline",
        "summary": "Dummy readline module for MicroPython"
    },
    {
        "name": "micropython-redis",
        "summary": "redis module for MicroPython"
    },
    {
        "name": "micropython-redis-cloudclient",
        "summary": "Micropython client that allows network attached boards to be controlled from a central redis server"
    },
    {
        "name": "micropython-redis-modular",
        "summary": "redis module for MicroPython that allows importing only a subset of the redis functionality for low memory environments"
    },
    {
        "name": "micropython-redis.client",
        "summary": "redis client module for MicroPython"
    },
    {
        "name": "micropython-redis.connection",
        "summary": "redis connection module for MicroPython"
    },
    {
        "name": "micropython-redis.geo",
        "summary": "redis geo module for MicroPython"
    },
    {
        "name": "micropython-redis.hash",
        "summary": "redis hash module for MicroPython"
    },
    {
        "name": "micropython-redis.key",
        "summary": "redis key module for MicroPython"
    },
    {
        "name": "micropython-redis.list",
        "summary": "redis client module for MicroPython"
    },
    {
        "name": "micropython-redis.pubsub",
        "summary": "redis pubsub module for MicroPython"
    },
    {
        "name": "micropython-redis.set",
        "summary": "redis set module for MicroPython"
    },
    {
        "name": "micropython-redis.sortedset",
        "summary": "redis set module for MicroPython"
    },
    {
        "name": "micropython-redis.string",
        "summary": "redis set module for MicroPython"
    },
    {
        "name": "micropython-reprlib",
        "summary": "Dummy reprlib module for MicroPython"
    },
    {
        "name": "micropython-requests",
        "summary": "Dummy requests module for MicroPython"
    },
    {
        "name": "micropython-requests.auth",
        "summary": "Dummy requests.auth module for MicroPython"
    },
    {
        "name": "micropython-resource",
        "summary": "Dummy resource module for MicroPython"
    },
    {
        "name": "micropython-rfsocket",
        "summary": "rfsocket module for MicroPython"
    },
    {
        "name": "micropython-rlcompleter",
        "summary": "Dummy rlcompleter module for MicroPython"
    },
    {
        "name": "micropython-rockwren",
        "summary": "Device framework (MQTT, Web) for MicroPython on the ESP8266 and Pico W."
    },
    {
        "name": "micropython-rosserial",
        "summary": "A package done in order to use rosserial with micropython."
    },
    {
        "name": "micropython-rosserial-msgs",
        "summary": "A package with rosserial_msgs uPy classes."
    },
    {
        "name": "micropython-rotary-encoder",
        "summary": "This is a micropython raspberry pi pico encoder library."
    },
    {
        "name": "micropython-rp2-arduino_nano_rp2040_connect-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-rp2-pico-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-rp2-pico_w-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-rp2-pimoroni_picolipo_16mb-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-rp2-rpi_pico-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-rp2-rpi_pico_w-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-rp2-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-runpy",
        "summary": "Dummy runpy module for MicroPython"
    },
    {
        "name": "micropython-ruuvitag",
        "summary": "RuuviTag BLE Sensor Beacon scanner."
    },
    {
        "name": "micropython-samd-adafruit_feather_m4_express-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-samd-adafruit_itsybitsy_m4_express-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-samd-minisam_m4-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-samd-seeed_wio_terminal-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-samd-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-sc16is7xx",
        "summary": "Library for sc16is7xx"
    },
    {
        "name": "micropython-scd30",
        "summary": "MicroPython I2C driver for SCD30 CO2 sensor module"
    },
    {
        "name": "micropython-sched",
        "summary": "Dummy sched module for MicroPython"
    },
    {
        "name": "micropython-schedule",
        "summary": "Job scheduling for humans."
    },
    {
        "name": "micropython-scron",
        "summary": "Simple CRON for MicroPython."
    },
    {
        "name": "micropython-secrets",
        "summary": "Dummy secrets module for MicroPython"
    },
    {
        "name": "micropython-select",
        "summary": "select module for MicroPython"
    },
    {
        "name": "micropython-selectors",
        "summary": "Dummy selectors module for MicroPython"
    },
    {
        "name": "micropython-senko",
        "summary": "Simplest OTA update solution for your Micropython projects."
    },
    {
        "name": "micropython-senml",
        "summary": "SenML serialisation for MicroPython."
    },
    {
        "name": "micropython-serial",
        "summary": "pySerial-like module for MicroPython (unix port)."
    },
    {
        "name": "micropython-servo",
        "summary": "Use rc servos with PWM in micropython in a tidy way"
    },
    {
        "name": "micropython-servo-pdm",
        "summary": "This is a micropython library for control continuous servo by PDM (PWM)."
    },
    {
        "name": "micropython-servo-pdm-360",
        "summary": "This is a micropython library for control continuous servo by PDM (PWM)."
    },
    {
        "name": "micropython-servomt",
        "summary": "uma biblioteca para controle de servo motor com micropython"
    },
    {
        "name": "micropython-sgp40",
        "summary": "MicroPython I2C driver for Sensirion SGP40 VOC sensor"
    },
    {
        "name": "micropython-shelve",
        "summary": "Dummy shelve module for MicroPython"
    },
    {
        "name": "micropython-shlex",
        "summary": "Dummy shlex module for MicroPython"
    },
    {
        "name": "micropython-sht20",
        "summary": "MicroPython Driver for the Sensirion SHT20 Temperature Sensor"
    },
    {
        "name": "micropython-sht30",
        "summary": "SHT30 sensor driver for micropython: IC2 bus"
    },
    {
        "name": "micropython-sht4x",
        "summary": "MicroPython Driver fot the Sensirion Temperature and Humidity SHT40 and SHT45 Sensor"
    },
    {
        "name": "micropython-shtc3",
        "summary": "MicroPython Driver for the Sensirion SHTC3 Temperature and Humidity Sensor"
    },
    {
        "name": "micropython-shutil",
        "summary": "shutil module for MicroPython"
    },
    {
        "name": "micropython-si7021",
        "summary": "MicroPython Library for the the Temperature and Humidity SI7021 Sensor"
    },
    {
        "name": "micropython-signal",
        "summary": "signal module for MicroPython"
    },
    {
        "name": "micropython-simple-keypad",
        "summary": "MicroPython library for interfacing with a keypad matrix"
    },
    {
        "name": "micropython-site",
        "summary": "\"site\" module for MicroPython, containing implementation of help()."
    },
    {
        "name": "micropython-sitecustomize",
        "summary": "Dummy sitecustomize module for MicroPython"
    },
    {
        "name": "micropython-smtplib",
        "summary": "Dummy smtplib module for MicroPython"
    },
    {
        "name": "micropython-sndhdr",
        "summary": "Dummy sndhdr module for MicroPython"
    },
    {
        "name": "micropython-socket",
        "summary": "socket module for MicroPython"
    },
    {
        "name": "micropython-socketserver",
        "summary": "Dummy socketserver module for MicroPython"
    },
    {
        "name": "micropython-socks",
        "summary": "MicroPython library implementing SOCKS server."
    },
    {
        "name": "micropython-spotify-web-api",
        "summary": "Spotify Web API client for MicroPython"
    },
    {
        "name": "micropython-spwd",
        "summary": "Dummy spwd module for MicroPython"
    },
    {
        "name": "micropython-sqlite3",
        "summary": "sqlite3 module for MicroPython"
    },
    {
        "name": "micropython-sram",
        "summary": "Library for SRAM and EERAM memories for micropython"
    },
    {
        "name": "micropython-ssd1306",
        "summary": "ssd1306 module for MicroPython"
    },
    {
        "name": "micropython-ssd1306py",
        "summary": "ssd1306 driver"
    },
    {
        "name": "micropython-ssd1327",
        "summary": "MicroPython library for SSD1327 based OLED displays."
    },
    {
        "name": "micropython-ssl",
        "summary": "Dummy ssl module for MicroPython"
    },
    {
        "name": "micropython-stat",
        "summary": "CPython stat module ported to MicroPython"
    },
    {
        "name": "micropython-statistics",
        "summary": "Dummy statistics module for MicroPython"
    },
    {
        "name": "micropython-stdlib-stubs",
        "summary": "Micropython stdlib is a reduced and augmented copy of typeshed's stdlib for use by MicroPython stub packages"
    },
    {
        "name": "micropython-stepmaker",
        "summary": "Stepmaker Package For Stepmaker Kit Users and Rpi Pico Users."
    },
    {
        "name": "micropython-stepper",
        "summary": "Library to use stepper drivers in micropython in a tidy way"
    },
    {
        "name": "micropython-stm32-pybv11-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-stm32-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-string",
        "summary": "string module for MicroPython"
    },
    {
        "name": "micropython-stringprep",
        "summary": "Dummy stringprep module for MicroPython"
    },
    {
        "name": "micropython-struct",
        "summary": "struct module for MicroPython"
    },
    {
        "name": "micropython-structured-config",
        "summary": "Configuration file support for micropython where the config structure is solely defined in python."
    },
    {
        "name": "micropython-stts22h",
        "summary": "MicroPython Driver for the STTS22H Temperature Sensor"
    },
    {
        "name": "micropython-stubber",
        "summary": "Tooling to create and maintain stubs for MicroPython"
    },
    {
        "name": "micropython-studuinobit-iot",
        "summary": "Studuino_MicroPython library for IoT"
    },
    {
        "name": "micropython-subprocess",
        "summary": "Dummy subprocess module for MicroPython"
    },
    {
        "name": "micropython-sunau",
        "summary": "Dummy sunau module for MicroPython"
    },
    {
        "name": "micropython-symbol",
        "summary": "Dummy symbol module for MicroPython"
    },
    {
        "name": "micropython-symtable",
        "summary": "Dummy symtable module for MicroPython"
    },
    {
        "name": "micropython-sys",
        "summary": "Dummy sys module for MicroPython"
    },
    {
        "name": "micropython-sysconfig",
        "summary": "Dummy sysconfig module for MicroPython"
    },
    {
        "name": "micropython-syslog",
        "summary": "Dummy syslog module for MicroPython"
    },
    {
        "name": "micropython-tarfile",
        "summary": "Dummy tarfile module for MicroPython"
    },
    {
        "name": "micropython-tcs3430",
        "summary": "MicroPython driver for the AMS TCS3430 Color and ALS sensor"
    },
    {
        "name": "micropython-telnetlib",
        "summary": "Dummy telnetlib module for MicroPython"
    },
    {
        "name": "micropython-tempfile",
        "summary": "Dummy tempfile module for MicroPython"
    },
    {
        "name": "micropython-termios",
        "summary": "Dummy termios module for MicroPython"
    },
    {
        "name": "micropython-test.pystone",
        "summary": "CPython test.pystone module ported to MicroPython"
    },
    {
        "name": "micropython-test.support",
        "summary": "test.support module for MicroPython"
    },
    {
        "name": "micropython-testbase64",
        "summary": "CPython base64 module ported to MicroPython"
    },
    {
        "name": "micropython-teststubs-sebastian-stigler",
        "summary": "Stub files for some micropython modules"
    },
    {
        "name": "micropython-textwrap",
        "summary": "CPython textwrap module ported to MicroPython"
    },
    {
        "name": "micropython-the-pad",
        "summary": "Modules and demos for the pad"
    },
    {
        "name": "micropython-threading",
        "summary": "threading module for MicroPython"
    },
    {
        "name": "micropython-time",
        "summary": "time module for MicroPython"
    },
    {
        "name": "micropython-timeit",
        "summary": "CPython timeit module ported to MicroPython"
    },
    {
        "name": "micropython-tinydb",
        "summary": "TinyDB"
    },
    {
        "name": "micropython-tm1637",
        "summary": "MicroPython library for TM1637 LED driver."
    },
    {
        "name": "micropython-tm1640",
        "summary": "MicroPython library for TM1640 LED driver."
    },
    {
        "name": "micropython-tmp117",
        "summary": "MicroPython Driver for the TMP117 temperature sensor"
    },
    {
        "name": "micropython-token",
        "summary": "CPython token module ported to MicroPython"
    },
    {
        "name": "micropython-tokenize",
        "summary": "Dummy tokenize module for MicroPython"
    },
    {
        "name": "micropython-trace",
        "summary": "Dummy trace module for MicroPython"
    },
    {
        "name": "micropython-traceback",
        "summary": "traceback module for MicroPython"
    },
    {
        "name": "micropython-tracemalloc",
        "summary": "Dummy tracemalloc module for MicroPython"
    },
    {
        "name": "micropython-tty",
        "summary": "tty module for MicroPython"
    },
    {
        "name": "micropython-turtledemo",
        "summary": "Dummy turtledemo module for MicroPython"
    },
    {
        "name": "micropython-types",
        "summary": "CPython types module ported to MicroPython"
    },
    {
        "name": "micropython-typesheds",
        "summary": "Typesheds (a.k.a.: interface stubs, `pyi` files, and type hints) for MicroPython."
    },
    {
        "name": "micropython-typing",
        "summary": "Dummy typing module for MicroPython"
    },
    {
        "name": "micropython-tziot",
        "summary": "tziot sdk for micropython"
    },
    {
        "name": "micropython-uAPI",
        "summary": "A very lightweight API framework"
    },
    {
        "name": "micropython-uPIL",
        "summary": "Dummy uPIL module for MicroPython"
    },
    {
        "name": "micropython-uaioftp",
        "summary": "Lightweight ftp asyncio library for MicroPython."
    },
    {
        "name": "micropython-uaiohttpclient",
        "summary": "HTTP client module for MicroPython uasyncio module"
    },
    {
        "name": "micropython-uaioweb",
        "summary": "Minimal asyncio web server for HTTP and Websocket."
    },
    {
        "name": "micropython-uargparse",
        "summary": "uargparse module for MicroPython"
    },
    {
        "name": "micropython-uasyncio",
        "summary": "Lightweight asyncio-like library for MicroPython, built around native Python coroutines."
    },
    {
        "name": "micropython-uasyncio.core",
        "summary": "Lightweight asyncio-like library for MicroPython, built around native Python coroutines. (Core event loop)."
    },
    {
        "name": "micropython-uasyncio.queues",
        "summary": "uasyncio.queues module for MicroPython"
    },
    {
        "name": "micropython-uasyncio.synchro",
        "summary": "Synchronization primitives for uasyncio."
    },
    {
        "name": "micropython-uasyncio.udp",
        "summary": "UDP support for MicroPython's uasyncio"
    },
    {
        "name": "micropython-uasyncio.websocket.server",
        "summary": "uasyncio.websocket.server module for MicroPython"
    },
    {
        "name": "micropython-ucontextlib",
        "summary": "ucontextlib module for MicroPython"
    },
    {
        "name": "micropython-uctypes",
        "summary": "Dummy uctypes module for MicroPython"
    },
    {
        "name": "micropython-uctypeslib",
        "summary": "Experimental module with helpers for 'uctypes' module."
    },
    {
        "name": "micropython-uctypeslib2",
        "summary": "uctypeslib2 module for MicroPython"
    },
    {
        "name": "micropython-ucurses",
        "summary": "ucurses module for MicroPython"
    },
    {
        "name": "micropython-uffmpeg",
        "summary": "(deprecated)"
    },
    {
        "name": "micropython-ulogger",
        "summary": "Log module customized for micropython."
    },
    {
        "name": "micropython-ulogging",
        "summary": "ulogging module for MicroPython"
    },
    {
        "name": "micropython-umqtt.robust",
        "summary": "Lightweight MQTT client for MicroPython (\"robust\" version)."
    },
    {
        "name": "micropython-umqtt.robust2",
        "summary": "MQTT client for MicroPython (\"robust\" version)."
    },
    {
        "name": "micropython-umqtt.simple",
        "summary": "Lightweight MQTT client for MicroPython."
    },
    {
        "name": "micropython-umqtt.simple2",
        "summary": "MQTT client for MicroPython."
    },
    {
        "name": "micropython-uncrustify",
        "summary": null
    },
    {
        "name": "micropython-unicodedata",
        "summary": "Dummy unicodedata module for MicroPython"
    },
    {
        "name": "micropython-unittest",
        "summary": "unittest module for MicroPython"
    },
    {
        "name": "micropython-unittest-junit",
        "summary": "Extended unittest for MicroPython with junit xml output"
    },
    {
        "name": "micropython-unix-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-upip",
        "summary": "Simple package manager for MicroPython."
    },
    {
        "name": "micropython-uploader",
        "summary": ""
    },
    {
        "name": "micropython-uplot",
        "summary": "MicroPython Graphics Library"
    },
    {
        "name": "micropython-upysh",
        "summary": "Minimalistic file shell using native Python syntax."
    },
    {
        "name": "micropython-urequests",
        "summary": "urequests module for MicroPython"
    },
    {
        "name": "micropython-urequests.auth",
        "summary": "Dummy urequests.auth module for MicroPython"
    },
    {
        "name": "micropython-url-encode",
        "summary": "This is a micropython library aimed at encoding and decoding URLs."
    },
    {
        "name": "micropython-urllib",
        "summary": "Dummy urllib module to MicroPython"
    },
    {
        "name": "micropython-urllib.parse",
        "summary": "CPython urllib.parse module ported to MicroPython"
    },
    {
        "name": "micropython-urllib.urequest",
        "summary": "urllib.urequest module for MicroPython"
    },
    {
        "name": "micropython-usdl2",
        "summary": "Lightweight SDL2 bindings for \"unix\" port of MicroPython."
    },
    {
        "name": "micropython-usercustomize",
        "summary": "Dummy usercustomize module for MicroPython"
    },
    {
        "name": "micropython-ustruct",
        "summary": "Dummy ustruct module for MicroPython"
    },
    {
        "name": "micropython-utarfile",
        "summary": "utarfile module for MicroPython"
    },
    {
        "name": "micropython-utokenize",
        "summary": "utokenize module for MicroPython"
    },
    {
        "name": "micropython-uu",
        "summary": "CPython uu module ported to MicroPython"
    },
    {
        "name": "micropython-uuid",
        "summary": "uuid module for MicroPython"
    },
    {
        "name": "micropython-uulogging",
        "summary": "uulogging module for MicroPython"
    },
    {
        "name": "micropython-uurequests",
        "summary": "uurequests module for MicroPython"
    },
    {
        "name": "micropython-vcnl4010",
        "summary": "MicroPython Driver for the Vishay VCNL4010 Proximity and Ambient Light Sensor"
    },
    {
        "name": "micropython-vec",
        "summary": "Vector Operations on MicroPython"
    },
    {
        "name": "micropython-venv",
        "summary": "venv module for MicroPython"
    },
    {
        "name": "micropython-warnings",
        "summary": "warnings module for MicroPython"
    },
    {
        "name": "micropython-watson-iot",
        "summary": "Unofficial IBM Watson IoT Platform SDK for Devices Running Micropython"
    },
    {
        "name": "micropython-wave",
        "summary": "Dummy wave module for MicroPython"
    },
    {
        "name": "micropython-weakref",
        "summary": "Dummy weakref module for MicroPython"
    },
    {
        "name": "micropython-webassembly-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-wiegand",
        "summary": "MicroPython class to read from a Wiegand card reader"
    },
    {
        "name": "micropython-wifi-communication",
        "summary": "um substituto para em vez de uma comunica\u00e7\u00e3o RF utilizar wifi"
    },
    {
        "name": "micropython-wifi-setup",
        "summary": ""
    },
    {
        "name": "micropython-wifi-tool",
        "summary": "A wifi tool for micropython"
    },
    {
        "name": "micropython-wifimanager",
        "summary": "A simple network configuration utility for MicroPython on the ESP-8266 and ESP-32 boards"
    },
    {
        "name": "micropython-winbond",
        "summary": "Simple MicroPython Winbond library"
    },
    {
        "name": "micropython-windows-stubs",
        "summary": "MicroPython stubs"
    },
    {
        "name": "micropython-ws2801",
        "summary": "MicroPython library for WS2801."
    },
    {
        "name": "micropython-wsentids",
        "summary": "MicroPython library for the WSEN WSEN-TIDS temperautre Sensor"
    },
    {
        "name": "micropython-wsgiref",
        "summary": "Dummy wsgiref module for MicroPython"
    },
    {
        "name": "micropython-xdrlib",
        "summary": "Dummy xdrlib module for MicroPython"
    },
    {
        "name": "micropython-xml",
        "summary": "Dummy xml module for MicroPython"
    },
    {
        "name": "micropython-xml.dom",
        "summary": "Dummy xml.dom module for MicroPython"
    },
    {
        "name": "micropython-xml.dom.minidom",
        "summary": "Dummy xml.dom.minidom module for MicroPython"
    },
    {
        "name": "micropython-xml.dom.pulldom",
        "summary": "Dummy xml.dom.pulldom module for MicroPython"
    },
    {
        "name": "micropython-xml.etree.ElementTree",
        "summary": "xml.etree.ElementTree module for MicroPython"
    },
    {
        "name": "micropython-xml.parsers.expat",
        "summary": "Dummy xml.parsers.expat module for MicroPython"
    },
    {
        "name": "micropython-xml.sax",
        "summary": "Dummy xml.sax module for MicroPython"
    },
    {
        "name": "micropython-xmlrpc",
        "summary": "Dummy xmlrpc module for MicroPython"
    },
    {
        "name": "micropython-xmlrpc.server",
        "summary": "Dummy xmlrpc.server module for MicroPython"
    },
    {
        "name": "micropython-xmltok",
        "summary": "xmltok module for MicroPython"
    },
    {
        "name": "micropython-xmltok2",
        "summary": "xmltok2 module for MicroPython"
    },
    {
        "name": "micropython-zipapp",
        "summary": "Dummy zipapp module for MicroPython"
    },
    {
        "name": "micropython-zipfile",
        "summary": "Dummy zipfile module for MicroPython"
    },
    {
        "name": "micropython-zipimport",
        "summary": "Dummy zipimport module for MicroPython"
    },
    {
        "name": "micropython-zlib",
        "summary": "Dummy zlib module for MicroPython"
    },
    {
        "name": "mindwidgets-circuitpython-df1201s",
        "summary": "CircuitPython driver for DFRobot DFPlayer Pro MP3 player with onboard storage"
    },
    {
        "name": "otterworks-circuitpython-drv8305",
        "summary": "CircuitPython library for the Texas Instruments DRV8305 Three-Phase Gate Driver"
    },
    {
        "name": "pms5003-micropython",
        "summary": "MicroPython library for the Plantower PMS5003 Particulate Matter Sensor."
    },
    {
        "name": "pycopy-cpython-micropython",
        "summary": "Pycopy module micropython ported to CPython"
    },
    {
        "name": "quax-circuitpython-hid",
        "summary": "CircuitPython helper library for simulating HID devices."
    },
    {
        "name": "quax-circuitpython-typing",
        "summary": "Types needed for type annotation that are not in `typing`"
    },
    {
        "name": "qwstpad-micropython",
        "summary": "Micropython library for the Pimoroni QwSTPad"
    },
    {
        "name": "samourai-circuitpython-dps310",
        "summary": "Library for the DPS310 Precision Barometric Pressure Sensor"
    },
    {
        "name": "samourai-circuitpython-scratch",
        "summary": "Example library for testing updates to cookiecutter"
    },
    {
        "name": "sparkfun-circuitpython-qwiicas3935",
        "summary": "CircuitPython driver library for the Sparkfun AS3935 Lightning Detector"
    },
    {
        "name": "sparkfun-circuitpython-qwiicjoystick",
        "summary": "CircuitPython library for the Sparkfun QwiicJoystick"
    },
    {
        "name": "sparkfun-circuitpython-qwiickeypad",
        "summary": "CircuitPython library for the Sparkfun Qwiic Keypad"
    },
    {
        "name": "sparkfun-circuitpython-qwiicrelay",
        "summary": "CircuitPython library for the Sparkfun Qwiic Relay"
    },
    {
        "name": "sparkfun-circuitpython-qwiictwist",
        "summary": "CircuitPython library for the Sparkfun Qwiic Twist RGB Rotary Encoder"
    },
    {
        "name": "sparkfun-circuitpython-serlcd",
        "summary": "CircuitPython driver library for the Sparkfun SerLCD displays"
    },
    {
        "name": "terkin-micropython-libraries",
        "summary": "Terkin MicroPython runtime libraries"
    },
    {
        "name": "thingsboard-micropython",
        "summary": "ThingsBoard MQTT MicroPython client"
    },
    {
        "name": "thonny-circuitpython",
        "summary": "CircuitPython support for Thonny IDE"
    },
    {
        "name": "thonny-etboard-micropython-firmware",
        "summary": "\uc774\ud2f0\ubcf4\ub4dc \ub9c8\uc774\ud06c\ub85c\ud30c\uc774\uc36c \ud38c\uc6e8\uc5b4 - Thonny V4 \uc9c0\uc6d0"
    },
    {
        "name": "types-circuitpython",
        "summary": "Type support (typings) for CircuitPython built-in binding packages."
    },
    {
        "name": "woolseyworkshop-circuitpython-74hc165",
        "summary": "CircuitPython driver for 74HC165 shift register."
    },
    {
        "name": "xpt2046-circuitpython",
        "summary": "A simple XPT2046 chip reader designed for use with CircuitPython."
    }
]